<?xml version="1.0" encoding="utf-8"?>
<?xsl-stylesheet type="text/xsl" href="../transforms/xsl/module/module2html.xsl"?>

<?xml-model href="../transforms/schemas/CCModule.rng" type="application/xml" schematypens="http://relaxng.org/ns/structure/1.0"?>



<Module boilerplate="yes" target-product="Authentication Server" 
  name="Authentication Server"
  xmlns="https://niap-ccevs.org/cc/v1"
  xmlns:sec="https://niap-ccevs.org/cc/v1/section"
  xmlns:h="http://www.w3.org/1999/xhtml">
 
  <PPReference>
    <ReferenceTable>
      <PPVersion>1.0</PPVersion>
      <PPAuthor>National Information Assurance Partnership</PPAuthor>
      <PPPubDate>2022-08-12</PPPubDate>
      <Keywords>authentication server, AAA, RADIUS, DIAMETER</Keywords>
    </ReferenceTable>
  </PPReference>
  <RevisionHistory>
    <entry>
      <version>1.0</version>
      <date>2022-08-12</date>
      <subject>Initial Release</subject>
    </entry>
  </RevisionHistory>
  
  
  <!-- TODO: no open items -->
  
  <sec:Introduction>
    <sec:Overview>
      An authentication server provides assertions to a relying party that a particular request for access is from an authentic digital identity associated with various identity attributes, such as a registered account within an information system, 
      or a certified identity as validated by a trusted certification authority or both. 
      The digital identities can represent people, devices or processes. Authentication servers validate various authenticators controlled by the entities represented by the presented digital identity. 
      When the entity is a person, authenticators can provide indications of what the entity knows (e.g., a password, pin or passphrase), what the entity has (e.g., a registered device in the control of the user), 
      or what the entity is (a biometric). NIST SP 800-63-3 Part B provides recommendations about how these authenticators can be leveraged individually or in combinations to 
      provide assurance that the entity is authentic and describes requirements for validation of the authenticators to various assurance levels. 
      A relying party may delegate verification of authenticator(s) to an authentication server; 
      such delegation creates a relationship between the relying party and the authentication server that is referred to as an identity federation. 
      Assertions to a federated relying party can be via bearer assertions or via direct communication with the relying party. 
      The latter mechanism is modeled after that used by Authentication, Access and Accounting (AAA) servers, which used the RADIUS protocol. 
      RADIUS has been largely replaced by DIAMETER, a protocol that addresses many of the security issues with RADIUS. 
      These provide direct, back-end assertions protected by an authenticated and encrypted channel to a Network Access Server that further governs accesses to resources on a network. 
      <h:p/>
      This PP-module describes the security functionality of authentication servers supporting RADIUS/DIAMETER and other messaging protocols intended for direct communications with relying parties via authenticated, real-time protected channels.
      <h:p/>
      The scope of this PP-Module is to describe the security functionality of an authentication server in terms of [CC] and to define functional and assurance requirements for such products. This PP-Module is intended for use with the following Base-PP:

      <h:ul>
        <h:li>collaborative Protection Profile for
          Network Devices, Version 2.2e (NDcPP)</h:li>
      </h:ul>
      This Base-PP is valid because an authentication server can be deployed as a dedicated network appliance. 
      The use case of deploying the authentication server as an application on a general-purpose computer is outside the scope of this PP-Module. 
      Authentication server products allow enterprises to provide a centralized and standardized method of evaluating user authentication requests made throughout the enterprise. 
      This enables a centralized definition for user identity and credential data and allows for uniform application of authentication policies that define what credentials and user attributes are necessary to 
      gain access to various systems and applications in the enterprise environment. 
      <h:p/>
      Note that the NDcPP defines an optional architecture for a “distributed TOE” that allows for security functionality to be spread across multiple distinct components. 
      This PP-Module does not require or prohibit the TOE from being a distributed system when the TOE conforms to the NDcPP; the TOE may be standalone or distributed in this case.
      
    </sec:Overview>
    <tech-terms>
      <suppress>Functional Package,Extended Package</suppress>
      <term full="Assertion">
        A statement from the TOE to an RP that contains information about a subscriber. Assertions may also contain verified attributes. 
        For the purposes of this PP-Module, Assertions containing authentication status and identity attributes are made by EAP response messages in accordance with EAP-TLS or EAP-TTLS.
      </term>
      <term abbr="AAA" full="Authentication, Authorization, and Accounting"></term>
      <term full="Authenticator">
        Something the claimant possesses and controls (typically a cryptographic module or password) that is used to authenticate the claimant’s identity.
      </term>
      <term full="Authentication Policy">
        A policy that specifies which authenticator types are required for a particular entity. The policy may be implicit for all entities, or configurable. 
      </term>
      <term full="Authenticator Output">
        The output value generated by an authenticator. The ability to generate valid authenticator outputs on demand proves that the claimant possesses and controls the authenticator. 
        Protocol messages sent to the verifier are dependent upon the authenticator output, but they may or may not explicitly contain it.
      </term>
      <term full="Claimant">
        A subject whose identity is to be verified using one or more authentication protocols. 
      </term>
      <term full="Credential">
        An object or data structure that authoritatively binds an identity - via an identifier or identifiers - and (optionally) additional attributes, to at least one authenticator possessed and controlled by a subscriber.
      </term>
      <term abbr="CRL" full="Certificate Revocation List"></term>
      <term abbr="CSI" full="Cryptographic Security Information"></term>
      <term full="Federation Protocol">
        A protocol to establish a trusted relationship with a relying party, and for the purposes of this PP module, to communicate authentication status for entities requesting access to resources managed by the relying party. 
        In this PP-module, Federation Protocols include RADIUS, DIAMETER, and other standard protocols used in direct communication between the relying party and the TOE.  
        Federation protocols that only support bearer assertions are out of scope for this PP-Module.
      </term>
      
      <term abbr="DTLS"   full="Datagram Transport Layer Security"/>
      <term abbr="EAP" full="Extensible Authentication Protocol"></term>
      <term abbr="HOTP" full="Hash-Based One-Time Password"></term>
      <term abbr="IPsec" full="Internet Protocol Security"/>
      <term abbr="OCSP" full="Online Certificate Status Protocol"></term>
      <term abbr="PSK" full="Pre-Shared Key"></term>
      <term abbr="RADIUS" full="Remote Authentication Dial In User Service"/>
      <term abbr="RBG" full="Random Bit Generator"></term>
      <term abbr="RP" full="Relying Party">
        An entity that relies upon the subscriber’s authenticator(s) and credentials or a verifier’s assertion of a claimant’s identity, typically to process a transaction or grant access to information or a system.
      </term>
      <term abbr="SSH" full="Secure Shell"></term>
      <term abbr="TLS"   full="Transport Layer Security"/>
      <term abbr="TOTP" full="Time-Based One-Time Password"></term>
      <term abbr="WLAN"  full="Wireless Local Area Network"/>
      
      

    </tech-terms>
    <sec:Compliant_Targets_of_Evaluation>
      This PP-Module specifically addresses a dedicated network device that performs entity (device or user) authentication via direct, back-end connections with a relying party. 
      The entity to be authenticated is referred to as the claimant, though different terms have been used for specific protocols (e.g., peer for RADIUS/DIAMETER). 
      The relying party can manage a single resource or provide access control for resources within a network. 
      For example, a Wireless Local Area Network (WLAN) Access System may use the services of a dedicated authentication server during tunnel establishment. 
      In this use case, an authentication server must support IEEE 802.1X Port-Based Network Access Control and must fulfill the IEEE 802.11 authentication server role using Extensible Authentication Protocol (EAP) messaging. 
      <h:p/>
      Similarly, the authentication server may be used during Virtual Private Network (VPN) tunnel establishment. 
      The relying party in this case is a VPN Gateway acting as a Network Access Server using passthrough between the VPN client and authentication server (the TOE), also using EAP messaging.
      <h:p/>
      In general, any relying party using a direct authentication federation protocol that supports EAP-TLS or EAP-TTLS messaging is addressed by this PP-Module.
      <h:p/>
      The combination of the NDcPP and this PP-Module is a network device that provides authentication server functionality in addition to all of the security functionality expected of a network device as mandated by the NDcPP. 
      <h:p/>
      This PP-Module describes the functional requirements and threats specific to authentication servers. A TOE that conforms to this PP-Module must also conform to the Base-PP.
    </sec:Compliant_Targets_of_Evaluation>
      <sec:TOE_Boundary>
        This document specifies SFRs for an authentication server. An authentication server is designed to authenticate a claimant that attempts to access a relying party – an access gateway to a protected network, 
        or individual resources and services – and provide assertions to one or more relying parties about the authentication state of the claimant. 
        A claimant forwards one or more authenticator outputs to the authentication server; the authentication server verifies the authenticator outputs and 
        may also provide additional identity attributes to allow the relying party to determine whether the claimant meets its authentication policy. 
        <h:p/>
        The authentication server defined by this PP-Module is one or more dedicated network appliances; the TOE is not intended to run as an application on a general-purpose computer. 
        The authentication server can be co-located with an access management or privilege management system, or it may be separate from such services. 
        Regardless of the deployment, access control functions and management of non-identity attributes are outside the scope of this PP-Module.
        <h:p/>
        An authentication server may be part of a larger system that also provides authorization information, 
        either as part of an AAA server, 
        an authorization server, or a domain controller. 
        This PP-Module specifies the functional requirements for authentication services only; as in the case where the TOE may be co-located with the relying party, 
        the TOE’s logical boundary only includes the authentication server functionality. 
        However, the TOE boundary includes the ability to generate audit events that are specific to the authentication functionality but may be used to support other functions (e.g., AAA servers).
	     <h:p/>
        <figure entity="images/figure1.png" title="NAS with an Authentication Server" id="OperEnv"/>
        <h:p/>
        <figure entity="images/figure2.png" title="Generic Authentication Server User Case" id="UseCase"/>
      </sec:TOE_Boundary>
    
    
    <sec:Use_Cases>
      This PP-Module defines potential use cases for the authentication server TOE, defined below. The first use case defines the physical embodiment of the TOE, while the latter three define its role in a network infrastructure.
      <usecases>
        <usecase id="usecase-dedicated" title="Dedicated Appliance">
          <description>The authentication server is integrated on a standalone network appliance. In this use case, conformance to the NDcPP and this PP-Module is sufficient to ensure security. 
            This PP-Module does not cover the use case where the authentication server is an application that is installed on a general-purpose computer.</description>
        </usecase>
        <usecase id="usecase-standalone" title="Standalone Server">
          <description>The system on which the authentication server is deployed is solely responsible for acting as an authenticator. 
            In this deployment, the authentication server’s only network infrastructure role is to communicate with the relying party for receiving challenges and issuing responses.</description>
        </usecase>
        <usecase id="usecase-colocated" title="Relying Party Co-Location">
          <description>
            The system on which the authentication server is deployed acts as both the relying party or its proxy and the authentication server. 
            In this deployment, the authentication server’s interactions with the relying party are internal-only. 
            Regardless of whether the relying party is a standalone component or the authentication server executable code also provides relying party functionality, 
            the TOE’s logical boundary still only includes the authentication server component. 
            Additionally, if the authentication server is a software application that can be deployed independently of the relying party, 
            the required external trusted communications must still be supported; 
            an authentication server cannot use the fact that it can be deployed on the same physical server as the relying party as a 
            way to exempt itself from implementation of IPsec, RadSec or mutually authenticated (D)TLS with an external relying party.
          </description>
        </usecase>
        <usecase id="usecase-integrated" title="Integrated as an Authorization Server Component">
          <description>
            The system on which the authentication server is deployed also acts as an authorization server 
            (e.g., as part of an AAA server) that provides authorization services in addition to the authentication server. 
            Assertions made via the direct connection can also include authorization information, and an unauthorized, but 
            authenticated user may result in a negative response to the relying party. 
            Regardless of whether these are all standalone components or whether the authentication server executable code also provides authorization functionality, 
            the TOE’s logical boundary still only includes the authentication server component. 
            As in the case where the authentication server is co-located with the relying party, 
            this deployment does not exempt the TOE from being able to implement all the functionality that this PP-Module requires.
          </description>
        </usecase>
      </usecases> 
    </sec:Use_Cases> 
  </sec:Introduction>
  <sec:Conformance_Claims boilerplate="no">
    <cclaims>
      <cclaim name="Conformance Statement">
        <description>
	  <h:p>
	    This PP-Module inherits exact conformance as required from the specified
            Base-PP and as defined in the CC and CEM addenda for Exact Conformance, Selection-Based
          SFRs, and Optional SFRs (dated May 2017).</h:p>
	  <h:p>
            No PPs or PP-Modules may be specified in a PP-Configuration with this PP-Module other than the Base-PP specified
	    in <xref to="Overview"/>.
	  </h:p>
        </description>
      </cclaim>
      <cclaim name="CC Conformance Claims">
        <description>This PP-Module is conformant to Parts 2 (extended) and 3 (conformant) of Common
          Criteria Version 3.1, Release 5 [CC]. </description>
      </cclaim>
      <cclaim name="Package Claims">
        <description>This PP-Module does not
          claim conformance to any packages.</description>
      </cclaim>
    </cclaims>
  </sec:Conformance_Claims>
  <sec:Security_Problem_Description>
    The security problem is described in terms of the threats that the TOE is expected to address, assumptions about its operational environment, and any organizational security policies that the TOE is expected to enforce.
    <sec:Threats>
      The following threats that are defined in this PP-Module extend the threats that are defined by the Base-PP.
      <threats>
        <threat name="T.FALSE_ENDPOINTS">
          <description>A malicious actor may falsely impersonate the TOE or a federated relying party in order to cause the TOE to operate in an insecure manner or 
            to extract security-relevant, or sensitive user data from the TOE or its Operational Environment.</description>
          <consistency-rationale>This threat is similar to the T.WEAK_AUTHENTICATION_ENDPOINTS threat in the NDcPP but it applies specifically to the NAS, 
            which is an environmental component that is defined specifically in this PP-Module.</consistency-rationale>
          <objective-refer ref="O.TRUSTED_RP">
            <rationale>The TOE’s enforcement of mutual authentication allows it and the relying party to identify and reject attempts for each component to be impersonated.
	    </rationale>
          </objective-refer>
        </threat>

        <threat name="T.INVALID_USERS">
          <description>A malicious user may supply incorrect or insufficient credential data or an otherwise invalid authentication request that is approved or ignored by the TSF such that protected resources are subject to unauthenticated access.
          </description>
          <consistency-rationale>This threat is similar to the T.UNAUTHORIZED_ADMINISTRATOR_ACCESS threat in the NDcPP but it applies to user authentication brokered by the TSF rather than to 
            administrator authentication to the TOE itself. It is also similar to the T.UNTRUSTED_COMMUNICATION_CHANNELS threat in the NDcPP except that it applies specifically to the 
            RADIUS communications and the protocols used to secure those, which is an interface that is defined specifically in this PP-Module.</consistency-rationale>
          <objective-refer ref="O.SECURITY_ASSOCIATION">
            <rationale>
              The TOE’s ability to maintain a security association ensures that a mechanism exists for the TSF to assert to an external entity that a given user is valid.
	    </rationale>
          </objective-refer>
          <objective-refer ref="O.USER_AUTH">
            <rationale>The TOE’s proper implementation of the claimant authentication ensures that it will accurately process authentication attempts to allow only valid authentication attempts. 
              The TOE’s ability to use trusted communications as part of the federation protocol implementation ensures that modification or disclosure of authentication data cannot be used 
              as a method to gain access to credentials or modify an authentication result.</rationale>
          </objective-refer>
        </threat>


      </threats>
    </sec:Threats>
    <sec:Assumptions>
      All assumptions for the OE of the Base-PP also apply to this PP-Module.
      <assumptions>
        <assumption name="A.RP_FEDERATION">
          <description>It is assumed that the TOE is federated with one or more relying parties that transmit authentication requests to it.</description>
          <consistency-rationale>The NDcPP does not define any assumptions for the intended network architecture that the TOE is deployed into. 
            Therefore, an assumption that the network can be set up in such a way that the TOE will have direct connectivity with one or more relying parties does not violate any assumptions of the NDcPP.</consistency-rationale>
          <objective-refer ref="OE.RP_FEDERATION">
            <rationale> The OE objective OE.RP_FEDERATION is realized through A.RP_FEDERATION.</rationale>
          </objective-refer>
        </assumption>
      </assumptions>
    </sec:Assumptions>
    <sec:Organizational_Security_Policies>
      <!-- This PP-Module defines no additional organizational security policies beyond those specified in the NDcPP. -->
      <OSPs/>
    </sec:Organizational_Security_Policies>
  </sec:Security_Problem_Description>
  <sec:Security_Objectives>
    <sec:Security_Objectives_for_the_TOE>

      <SOs>
        <SO name="O.TRUSTED_RP">
          <description>The TOE shall provide mechanisms to authenticate itself to a federated RP and authenticate a federated RP before providing an identity assertion.
          </description>
          <consistency-rationale>
            The NDcPP does not define any TOE objectives; instead, it maps SFRs directly to threats. 
            The TOE objectives defined by this PP-Module are therefore assumed not to conflict with the NDcPP by virtue of the fact that the SFRs used to satisfy these objectives do not conflict with the NDcPP SFRs.
	  </consistency-rationale>
	  <addressed-by>FCS_EAPTLS_EXT.1</addressed-by>
	  <rationale>
	    TBD
	  </rationale>
          <addressed-by>FIA_PSK_EXT.1/Auth</addressed-by>
          <rationale>
         TBD   
          </rationale>          
          <addressed-by>FTP_ITC.1/NAS</addressed-by>
          <rationale>
            TBD
          </rationale>
		  </SO>
         
         
        <SO name="O.USER_AUTH">
          <description>The TOE shall provide a mechanism to assess authentication requests and respond with an authentication assertion based on data that is supplied in the request.
          </description>
          <consistency-rationale>
            The NDcPP does not define any TOE objectives; instead, it maps SFRs directly to threats. 
            The TOE objectives defined by this PP-Module are therefore assumed not to conflict with the NDcPP by virtue of the fact that the SFRs used to satisfy these objectives do not conflict with the NDcPP SFRs.
          </consistency-rationale>
          <addressed-by>FIA_AFL.1/AuthSvr</addressed-by>
          <rationale>
            TBD
          </rationale>
          <addressed-by>FIA_UAU.6</addressed-by>
          <rationale>
            TBD   
          </rationale>          
          <addressed-by>FTA_TSE.1</addressed-by>
          <rationale>
            TBD
          </rationale>
        </SO>

  
        <SO name="O.SECURITY_ASSOCIATION">
          <description>The TOE shall provide the information to the relying party to enable the relying party to verify that the claimant has possession of an authentication key.
          </description>
          <consistency-rationale>
            The NDcPP does not define any TOE objectives; instead, it maps SFRs directly to threats. 
            The TOE objectives defined by this PP-Module are therefore assumed not to conflict with the NDcPP by virtue of the fact that the SFRs used to satisfy these objectives do not conflict with the NDcPP SFRs.
          </consistency-rationale>
          <addressed-by>FCS_EAPTLS_EXT.1</addressed-by>
          <rationale>
            TBD
          </rationale>
        </SO>
      </SOs>
      </sec:Security_Objectives_for_the_TOE>
      
    <sec:Security_Objectives_for_the_Operational_Environment>
      All objectives for the OE of the Base-PP also apply to this PP-Module.
      <SOEs>
        <SOE name="OE.RP_FEDERATION">
          <description> The TOE will be deployed in such a manner that it is federated with one or more relying parties that transmit authentication requests to it.</description>
          <consistency-rationale>The Base-PP does not define where in a particular network architecture a network device must be deployed since it is designed to be generic to various types of network devices. This PP-Module
            defines the expected architectural deployment specifically for a network device that acts as an authentication server.</consistency-rationale>
        </SOE>
      </SOEs>
    </sec:Security_Objectives_for_the_Operational_Environment>
    <sec:Security_Objectives_Rationale>
      <!-- NOTE: This section should remain empty and is populated from the rationale tags in the previous sections.  -->
    </sec:Security_Objectives_Rationale>
  </sec:Security_Objectives>
  <sec:Security_Requirements>
    <base-pp id="ND" version="2.2e" name="Network Device" product="Network Device" short="ND" plural="NDs">
      <url><![CDATA[https://www.niap-ccevs.org/profile/Info.cfm?PPID=447&id=447]]></url>
  	  <cPP/>
      <modified-sfrs>
        <!-- per open comment, it's unclear whether we need to treat any other NDcPP SFRs as 'modified' (most notably FIA_X509_EXT.1/Rev and FTP_ITC.1, or are those completely separate from what is needed for auth server) -->

        <sec:from_nd_fia title="Identification and Authentication (FIA)">
          <f-component cc-id="fia_x509_ext.1" iteration="Rev" name="X.509 Certificate Validation"> 
            <consistency-rationale>This PP-Module modifies the Base-PP's definition of the SFR by making it mandatory rather than selection-based.</consistency-rationale>
            <f-element>
              <title>
                This SFR is selection-based in the NDcPP. When the TOE conforms to this PP-Module it is mandatory because of the PP-Module's requirement for implementation of mutually-authenticated TLS or DTLS.
              </title>
              <aactivity>
                <TSS>There are no additional TSS evaluation activities for this component beyond what the NDcPP requires.<h:br/><h:br/></TSS>
                <Guidance>There are no additional guidance evaluation activities for this component beyond what the NDcPP requires.<h:br/><h:br/></Guidance>
                <Tests>
                  There are no additional test evaluation activities for this component beyond what the NDcPP requires.
                </Tests>
              </aactivity>
            </f-element>
          </f-component>
          
          <f-component cc-id="fia_x509_ext.2" name="X.509 Certificate Authentication"> 
            <consistency-rationale>This PP-Module modifies the Base-PP's definition of the SFR by making it mandatory rather than selection-based.</consistency-rationale>
            <f-element>
              <title>
                This SFR is selection-based in the NDcPP. When the TOE conforms to this PP-Module it is mandatory because of the PP-Module's requirement for implementation of mutually-authenticated TLS or DTLS.
              </title>
              <aactivity>
                <TSS>There are no additional TSS evaluation activities for this component beyond what the NDcPP requires.<h:br/><h:br/></TSS>
                <Guidance>There are no additional guidance evaluation activities for this component beyond what the NDcPP requires.<h:br/><h:br/></Guidance>
                <Tests>
                  There are no additional test evaluation activities for this component beyond what the NDcPP requires.
                </Tests>
              </aactivity>
            </f-element>
          </f-component>
          
          
          <f-component cc-id="fia_x509_ext.3" name="X.509 Certificate Requests"> 
            <consistency-rationale>This PP-Module modifies the Base-PP's definition of the SFR by making it mandatory rather than selection-based.</consistency-rationale>
            <f-element>
              <title>
                This SFR is selection-based in the NDcPP. When the TOE conforms to this PP-Module it is mandatory because of the PP-Module's requirement for implementation of mutually-authenticated TLS or DTLS.
              </title>
              <aactivity>
                <TSS>There are no additional TSS evaluation activities for this component beyond what the NDcPP requires.<h:br/><h:br/></TSS>
                <Guidance>There are no additional guidance evaluation activities for this component beyond what the NDcPP requires.<h:br/><h:br/></Guidance>
                <Tests>
                  There are no additional test evaluation activities for this component beyond what the NDcPP requires.
                </Tests>
              </aactivity>
            </f-element>
          </f-component>
          
        </sec:from_nd_fia>
        

      </modified-sfrs>
      <additional-sfrs/>
      <con-toe> 
        When this PP-Module is used to extend the NDcPP, the TOE type for the overall TOE is still a network device.
        The TOE boundary is simply extended to include authentication server functionality that is provided by the network device. </con-toe>
      <con-sec-prob/>
      <con-obj/>
      <con-op-en/>

      

    </base-pp>
    <man-sfrs>
      
      <sec:man_fau title="Security Audit (FAU)">
        <f-component cc-id="fau_gen.1" name="Audit Data Generation" iteration="AuthSvr">
          <consistency-rationale>This SFR iterates the FAU_GEN.1 SFR defined in the Base-PP to define auditable events for the functionality that is specific to this PP-Module.</consistency-rationale>
<f-element>
            <title> The TSF shall be able to generate an audit record of the following auditable
              events: <h:ol type="a">
                <h:li>Start-up and shutdown of the audit functions;</h:li>
                <h:li>All auditable events for the [<h:i>not specified</h:i>] level of audit; and</h:li>
                <h:li>[<h:i>Auditable events listed in the Auditable Events table (<xref to="auditAuthSvr"/>)</h:i></h:li>
              </h:ol>
            <h:table>
              <h:tr>
                <h:th>Requirement</h:th>
                <h:th>Auditable Events</h:th>
                <h:th>Additional Audit Record Contents</h:th>
              </h:tr>
              <h:tr>
                <h:td>FCO_NRO.1</h:td>
                <h:td>Claimant request for which the TOE does not have credential verification data</h:td>
                <h:td>Identity of the claimant, contents of EAP-response (if present)</h:td>
              </h:tr>
              <h:tr>
                <h:td>FCO_NRR.1</h:td>
                <h:td colspan="2">None</h:td>
              </h:tr>
              <h:tr>
                <h:td>FCS_CKM.3</h:td>
                <h:td>[<h:i>selection: attempt to export plaintext key or CSI via defined interface, none</h:i>]<h:p/>
                  Note: if no defined interfaces have access to persistend keys or CSI, select 'none'</h:td>
                <h:td>If attempt is detected, record process identifier, authorized user's identifier (if any)</h:td>
              </h:tr>
              <h:tr>
                <h:td rowspan="2">FCS_EAPTLS_EXT.1</h:td>
                <h:td>Protocol failures</h:td>
                <h:td>If failure occurs, record a descriptive reason for the failure</h:td>
              </h:tr>
              <h:tr>
                <h:td>Successful authentication of claimant</h:td>
                <h:td>Identifier of claimant</h:td>
              </h:tr>
              <h:tr>
                <h:td rowspan="2">FCS_RADIUS_EXT.1</h:td>
                <h:td>Protocol failures</h:td>
                <h:td>If failure occurs, record a descriptive reason for the failure</h:td>
              </h:tr>
              <h:tr>
                <h:td>Success/failure of authentication</h:td>
                <h:td>None</h:td>
              </h:tr>
              <h:tr>
                <h:td>FCS_RADSEC_EXT.1 (selection-based)</h:td>
                <h:td colspan="2">None</h:td>
              </h:tr>
              <h:tr>
                <h:td>FCS_RADSEC_EXT.2 (selection-based)</h:td>
                <h:td colspan="2">None</h:td>
              </h:tr>
              <h:tr>
                <h:td>FCS_STG_EXT.1</h:td>
                <h:td colspan="2">None</h:td>
              </h:tr>
              <h:tr>
                <h:td rowspan="2">FIA_AFL.1/AuthSvr</h:td>
                <h:td>The reaching of the threshold for the unsuccessful authentication attempts</h:td>
                <h:td rowspan="2">The claimed identity of the entity attempting to authenticate or the IP where the attempts originated</h:td>
              </h:tr>
              <h:tr>
                <h:td>Disabling an account due to the threshold being reached</h:td>
              </h:tr>
              <h:tr>
                <h:td rowspan="2">FIA_HOTP_EXT.1 (selection-based)</h:td>
                <h:td>Generation of a HOTP seed value</h:td>
                <h:td>Entity identifier</h:td>
              </h:tr>
              <h:tr>
                <h:td>Entity HOTP value comparison</h:td>
                <h:td>Result of comparison - success or failure</h:td>
              </h:tr>
              <h:tr>
                <h:td>FIA_PSK_EXT.1 (selection-based)</h:td>
                <h:td colspan="2">None</h:td>
              </h:tr>
              <h:tr>
                <h:td>FIA_PSK_EXT.2 (selection-based)</h:td>
                <h:td colspan="2">None</h:td>
              </h:tr>
              <h:tr>
                <h:td>FIA_PSK_EXT.3 (selection-based)</h:td>
                <h:td colspan="2">None</h:td>
              </h:tr>
              <h:tr>
                <h:td rowspan="2">FIA_TOTP_EXT.1 (selection-based)</h:td>
                <h:td>Generation of a TOTP seed value</h:td>
                <h:td>Entity identifier</h:td>
              </h:tr>
              <h:tr>
                <h:td>Entity TOTP value comparison</h:td>
                <h:td>Result of comparison - success or failure</h:td>
              </h:tr>
              <h:tr>
                <h:td>FIA_X509_EXT.1/AuthSvr</h:td>
                <h:td>Certificate validation failure</h:td>
                <h:td>Reason for failure</h:td>
              </h:tr>
              <h:tr>
                <h:td>FIA_UAU.6</h:td>
                <h:td>All use of the authentication mechanism</h:td>
                <h:td>Origin of the attempt (e.g., IP address)</h:td>
              </h:tr>
              <h:tr>
                <h:td>FMT_SMF.1/AuthSvr</h:td>
                <h:td>All management actions</h:td>
                <h:td>Identifier of initiator</h:td>
              </h:tr>
              <h:tr>
                <h:td>FTA_TSE.1</h:td>
                <h:td>Denial of session establishment due to the session establishment mechanism</h:td>
                <h:td>Reason for denial, origin of establishment attempt</h:td>
              </h:tr>
              <h:tr>
                <h:td rowspan="3">FTP_ITC.1/NAS</h:td>
                <h:td>Initiation of the trusted channel</h:td>
                <h:td>Identification of the initiator</h:td>
              </h:tr>
              <h:tr>
                <h:td>Termination of the trusted channel</h:td>
                <h:td>Identification of the initiator</h:td>
              </h:tr>
              <h:tr>
                <h:td>Failure of the trusted channel functions</h:td>
                <h:td>Target of failed trusted channels establishment attempt</h:td>
              </h:tr>
            </h:table>
              <ctr ctr-type="Table" id="auditAuthSvr">: Auditable Events</ctr>
            </title>
	    <note role="application">
	      <h:p>
		The auditable events defined in <xref to="auditAuthSvr"/> are for the SFRs that
		are explicitly defined in this PP-Module and are intended to extend FAU_GEN.1 in the Base-PP.
	      </h:p>
	      <h:p>
		The events in the Auditable Events table should be combined with those of the NDcPP in the
		context of a conforming Security Target.
	      </h:p>
	      <h:p>
		The Auditable Events (<xref to="auditAuthSvr"/>) includes selection-based SFRs.
		The auditing of selection-based SFRs is only required if that SFR is included in the ST.
	      </h:p>
	      <h:p>
		Per FAU_STG_EXT.1 in the Base-PP, the TOE must support transfer of the audit data to an
		external IT entity using a trusted channel.
	      </h:p>
	    </note>
  <aactivity>
    <TSS> There are no TSS evaluation activities for this SFR.<h:br/><h:br/>
    </TSS>
    <Guidance>The evaluator shall ensure that the operational guidance identifies the auditable events and includes representative examples of each event so that the presentation of each event can be identified.<h:br/><h:br/>
    </Guidance>
    <Tests>The evaluator shall test the TOE’s ability to correctly generate audit records
      by having the TOE generate audit records in accordance with the evaluation activities
      associated with the functional requirements in this PP-Module. When verifying the
      test results, the evaluator will ensure the audit records generated during testing
      match the format specified in the administrative guide and that the fields in each
      audit record have the proper entries. <h:p/>
      Note that the testing here can
      be accomplished in conjunction with the testing of the security mechanisms directly.
      </Tests>
  </aactivity>
</f-element> 
        </f-component>
      </sec:man_fau>
     
      <sec:man_fco title="Communications (FCO)">
     
        <f-component name="Selective Proof of Origin" cc-id="fco_nro.1">
          <consistency-rationale>This SFR applies to implementation of the supported authentication protocol, which is beyond the original scope of the Base-PP.</consistency-rationale>
          <f-element>
            <title>
              The TSF shall be able to generate evidence of origin for transmitted 
              [<h:i>identity authentication assertions, 
                <selectables>
                  <selectable>authentication requests</selectable>
                  <selectable>IKE authentication phase security associations</selectable>
                  <selectable><assignable>claimant identity attributes</assignable></selectable>
                  <selectable>no other data</selectable></selectables></h:i>] 
              at the request of the [<h:i>relying party,
                <selectables>
                  <selectable>external authentication servers in support of pass-through</selectable>
                  <selectable>no other entities</selectable></selectables></h:i>].
            </title>
            <note role="application">
                The intent of this requirement is for the TOE to provide source of origin (non-repudiation) 
                for assertions and sensitive data associated to claimants it provides to relying parties. 
                The ST author will claim ‘authentication requests’ and ‘external authentication servers…’ 
                if the TSF supports pass-through communication with external authentication servers. 
                The ST author claims additional information provided to a relying party via an authenticated channel as appropriate. 
            </note>
          </f-element>
          <f-element>
            <title>
              The TSF shall be able to relate the [<h:i>authenticator</h:i>] of the originator of the information, and the [<h:i>authentication request</h:i>] of the information to which the evidence applies.
            </title>
            <note role="application">
              The intent of this requirement is for the TOE to be able to associate authentication assertions it makes to requests made to it by a relying party. 
              For pass-through functionality, the TOE relates requests and response messages it forwards between external entities via identity information asserted in the EAP headers.
            </note>
          </f-element>
          <f-element>
            <title>The TSF shall provide a capability to verify the evidence of origin of information to [<h:i>recipient</h:i>] given [<h:i>an authenticated channel is established with a trusted relying party]</h:i>].</title>
          <aactivity>
              <TSS>
                The evaluator shall ensure that the ST includes a description of authentication assertions, security associations or sensitive data associated with a claimant 
                that is provided to a relying party, and a description of each protocol that carries such data.
                <h:p/>
                The evaluator shall ensure that the ST includes a description of support for pass-through methods and the method it uses to mutually authenticate to, external authentication servers.
                <h:p/>
                The evaluator shall verify that the descriptions indicate how the TSF authenticates itself to the external entities via those protocols, and that no data is passed via an unauthenticated protocol.
                <h:p/>
                The evaluator shall verify that the ST describes how the TSF handles session interruptions and resumptions to ensure the relying party is able to associate data associated with a claimant 
                to the authentication request by the relying party and the authenticator provided by the claimant.
                <h:p/>
              </TSS>
            <Guidance>The evaluator shall ensure that any instructions for configuring the TSF to meet the requirements are provided.<h:p/></Guidance>
              <Tests>
                The evaluator shall perform the following tests:
                <testlist>
                <test>
                  <h:ul>
                    <h:li>Step 1: The evaluator shall establish a connection with the TSF from two trusted relying parties RP1 and RP2 and verify that each of RP1 and RP2 are able to authenticate the TOE.</h:li> 
                    <h:li>Step 2: The evaluator shall initiate an authentication request for a claimant C1 via RP1, providing valid authentication data, and verify that RP1 receives an authentication assertion via the authenticated channel indicating C1 is authenticated.</h:li>
                    <h:li>Step 3: The evaluator shall initiate an authentication request for a claimant C2 via RP2, providing invalid authentication data and confirm that the TOE does not provide an authentication assertion indicating C2 is authenticated via the authenticated channel.</h:li> 
                    <h:li>Step 4: The evaluator shall send correct authentication data associated with claimant C2 via RP1 without sending a new authentication request and observe that the TOE ignores the request.</h:li>
                  </h:ul>
                </test>
                  <test>(conditional on support for pass-through). The intent of this test is to demonstrate the TSF is able to authenticate to external entities for registered users 
                    over a pass-through method, and ignores requests for non-registered users.
                    <h:ul>
                      <h:li>Step 1: The evaluator shall follow AGD instructions to configure the TOE to connect to an external authentication server using pass-through functionality, 
                        and initiate a request from a trusted relying party that results in the TSF exercising pass-through functionality to authenticate a registered claimant.</h:li> 
                      <h:li>Step 2: The evaluator shall observe that the TSF authenticates to the external authentication server prior to sending any authentication requests.</h:li>
                      <h:li>Step 3: The evaluator shall then follow AGD guidance to de-register the claimant at the TOE, and ensure the claimant is still registered at the external authentication server. 
                        The evaluator shall repeat initiation of the authentication request for the claimant, and observe that the TSF associates the identifier of the request by dropping the request without forwarding.</h:li>
                    </h:ul>
                  </test>
                </testlist>
              </Tests>
            </aactivity>
          </f-element>
        </f-component>
     
     
     
        <f-component name="Selective Proof of Receipt" cc-id="fco_nrr.1">
          <consistency-rationale>This SFR applies to implementation of the supported authentication protocol, which is beyond the original scope of the Base-PP.</consistency-rationale>
          <f-element>
            <title>
              The TSF shall be able to generate evidence of receipt for received [<h:i>authentication requests, 
                <selectables>
                  <selectable>authentication responses and queries</selectable>
                  <selectable>none</selectable></selectables></h:i>] at the request of the [<h:i>originator</h:i>].
            </title>
            <note role="application">
              The intent of this requirement is for the TOE to be able to return a valid response to the relying party upon receipt of an Access-Request. 
              If the TSF supports pass-through functionality, the ST author claims ‘authentication responses and queries’ 
              in the selection for authentication in communications with external authentication servers.  
            </note>
          </f-element>
          <f-element>
            <title>
              The TSF shall be able to relate the [<h:i>claimant identifier, claimant authenticators</h:i>] of the recipient of the information, and the 
              [<h:i>identity assertion, information requests and error responses</h:i>] of the information to which the evidence applies.
            </title>
            <note role="application">
              The intent of this requirement is for the ST author to list the information supplied by the TOE in response to an authentication request that confirms receipt of the request, and identifies: 
              <h:ul>
                <h:li>the authentication request that is being responded to;</h:li> 
                <h:li>the mutually authenticated channel between the trusted relying party and the TOE.</h:li> 
              </h:ul>
            </note>
          </f-element>
          <f-element>
            <title>The TSF shall provide a capability to verify the evidence of receipt of information to 
              [<h:i>originator</h:i>] given [<h:i>establishment of a mutually authenticated channel with a trusted relying party</h:i>].</title>
            <aactivity>
              <TSS>
                The evaluator shall ensure that the ST includes a description of each messaging protocol and the specific messages provided to a relying party in response to authentication requests, 
                to include any affirmative and negative responses, and requests for additional information.
                <h:p/>
                The evaluator shall verify that the descriptions indicate how the TSF indicates the identity of the claimant associated with any responses to a request.
                <h:p/>
                The evaluator shall verify that the ST describes how the TSF handles session interruptions and resumptions to ensure the relying party is able to associate data 
                associated with a claimant to the authentication request by the relying party and the authenticator provided by the claimant.
                <h:p/>
              </TSS>
              <Guidance>The evaluator shall ensure that any instructions for configuring the TSF to meet the requirements are provided.<h:p/></Guidance>
              <Tests>
                For each messaging protocol supported, the evaluator shall perform the following test:
                <testlist>
                  <test>
                    The evaluator shall establish a connection between a trusted relying party and the TOE and send an authentication request for a registered claimant, in accordance with the messaging protocol standard. 
                    The evaluator shall confirm the TOE responds to each message sent by the relying party with a message that appropriately identifies the claimant and confirms receipt of the request.
                  </test>
                </testlist>
              </Tests>
            </aactivity>
          </f-element>
        </f-component>
        
     
     </sec:man_fco>
     
      <sec:man_fcs title="Cryptographic Support (FCS)">
        
        
        <f-component name="Cryptographic Key Access" cc-id="fcs_ckm.3">
            <consistency-rationale>TBD</consistency-rationale>
          <f-element>
            <title>
              The TSF shall perform [<h:i>access control for persistent private and secret keys and security critical parameters required by this PP-Module</h:i>] 
              in accordance with a specified cryptographic key access method 
              [<h:i>ensuring only authorized security functionality can access plaintext keys or security critical information</h:i>] 
              that meets the following: [<h:i>keys and security critical information are not exportable in plaintext, keys and security critical information are not viewable in plaintext</h:i>].
            </title>
            <note role="application">
              Keys used for assertion signatures, including private keys associated to certificates used to establish a protected channel to 
              relying parties and entities to be authenticated, one-time-password seed keys, 
              and plaintext passwords can undermine or bypass the protections required for TOE functionality. 
              The ST author describes the specific methods used to prevent unauthorized or unnecessary access to these keys and security critical information. 
              This requirement is not intended to cover unanticipated exploits; 
              it is only required that plaintext keys and security critical values not be exportable or viewable by defined interfaces. 
              OTP seed key values are shared using out-of-band methods with the associated entities. 
              This requirement implies that the method to export these values uses encrypted key transport methods.
            </note>
            <aactivity>
              <TSS>
                The evaluator shall verify the ST includes a description of all persistent secret and private keys used by the TSF to perform functions in this PP-Module. 
                The evaluator shall verify the ST describes mechanism(s) used to prevent unauthorized exposure of keys.
                <h:p/>
              </TSS>
              <Guidance>The evaluator shall verify that any configuration required to meet the requirements are described.<h:p/></Guidance>
              <Tests>
                The intent of these tests is to ensure keys are not accessible using common interfaces and functionality of the TSF. 
                It is not intended for the evaluator to attempt to cause a system crash in order to read keys and critical security parameters directly from memory or to modify functionality of the TSF.
                <h:p/>
                The evaluator shall perform the following tests:
		          <testlist>
		            <test>
		              The evaluator shall attempt to export each key and critical security parameter using available interfaces and verify the mechanism is effective at preventing exposure of the key in plaintext.
		            </test>
		            <test>
		              The evaluator shall assume each of the privileged user roles and attempt to gain read access to each of the keys and critical security parameters via available interfaces.
		            </test>
		          </testlist>
              </Tests>
            </aactivity>
          </f-element>
        </f-component>
        
        <ext-comp-def title="EAP-TLS Protocol" fam-id="FCS_EAPTLS_EXT">
          <fam-behavior>This family defines requirements for how the TSF implements the Extensible Authentication Protocol (EAP) and EAP-Transport Layer Security.</fam-behavior> 
        </ext-comp-def>
        
        <f-component name="EAP-TLS Protocol" cc-id="fcs_eaptls_ext.1">
          <consistency-rationale>This SFR applies to implementation of EAP-TLS; the Base-PP defines implementation requirements for (D)TLS, but EAP-TLS is beyond the original scope of the Base-PP. </consistency-rationale>

          <comp-lev>requires the TSF to implement EAP and EAP-TLS according to appropriate standards.</comp-lev>
          <management>No specific management functions are identified.</management>
          <audit>The following actions should be auditable if FAU_GEN Security audit data generation is included in the PP/ST:
            <h:ul>
              <h:li>Protocol failures</h:li>
              <h:li>Establishment of a TLS session</h:li>
            </h:ul>
          </audit>
          <dependencies>FCS_RBG_EXT.1 Random Bit Generation<h:p/>
            [FCS_TLSC_EXT.1 TLS Client Protocol Without Mutual Authentication, or<h:p/>
            FCS_DTLSC_EXT.1 DTLS Client Protocol Without Mutual Authentication]<h:p/>
            [FCS_TLSC_EXT.2 TLS Client Support for Mutual Authentication, or<h:p/>
            FCS_DTLSC_EXT.2 DTLS Client Support for Mutual Authentication]<h:p/>
            FIA_X509_EXT.1 X.509 Certificate Validation
          </dependencies>
         
          <f-element>
            <title>
              The TSF shall implement <selectables>
                <selectable>EAP-TLS as specified in RFC 5216</selectable>
                <selectable>EAP-TTLS as specified in RFC 5881</selectable></selectables> as updated by RFC 8996 with <selectables>
                <selectable>TLS</selectable>
                <selectable>DTLS</selectable></selectables> implemented using mutual authentication in accordance with <selectables>
                <selectable>FCS_TLSS_EXT.1 and FCS_TLSS_EXT.2</selectable>
                <selectable>FCS_DTLSS_EXT.1 and FCS_DTLSS_EXT.2</selectable></selectables>.
            </title>
          </f-element>
          <f-element>
            <title>
              The TSF shall generate random values used in the <selectables>
                <selectable>EAP-TLS</selectable>
                <selectable>EAP-TTLS</selectable></selectables> exchange using the RBG specified in FCS_RBG_EXT.1.
            </title>
          </f-element>
          <f-element>
            <title>
              The TSF shall support claimant authentication using certificates and <selectables>
                <selectable>static PSK</selectable>
                <selectable>HOTP</selectable>
                <selectable>TOTP</selectable>
                <selectable><assignable>other authentication-verification protocols</assignable></selectable>
                <selectable>other authentication-verification protocols via pass-through functionality</selectable>
                <selectable>no other authentication methods</selectable></selectables>.
            </title>
          </f-element>
          <f-element>

            <title>
              The TSF shall not forward an EAP-success response to the relying party if the client certificate is not valid according to FIA_X509_EXT.1<h:b>/Rev</h:b>, 
              if the <selectables>
                <selectable>TLS</selectable>
                <selectable>DTLS</selectable></selectables> session is not established, or if any of <selectables>
                <selectable>PSK</selectable>
                <selectable>HOTP value</selectable>
                <selectable>TOTP value</selectable>
                <selectable>no other authenticator</selectable></selectables> required by the authentication policy are not provided or if any of the required authenticators presented in the authentication request is not valid.
            </title>
            <ext-comp-def-title>
              <title>
                The TSF shall not forward an EAP-success response to the relying party if the client certificate is not valid according to FIA_X509_EXT.1, 
                if the <selectables>
                  <selectable>TLS</selectable>
                  <selectable>DTLS</selectable></selectables> session is not established, or if any of <selectables>
                    <selectable>PSK</selectable>
                    <selectable>HOTP value</selectable>
                    <selectable>TOTP value</selectable>
                    <selectable>no other authenticator</selectable></selectables> required by the authentication policy are not provided or if any of the required authenticators presented in the authentication request is not valid.
              </title>
            </ext-comp-def-title>
            <note role="application">The ST author should indicate support for EAP-TLS or EAP-TTLS in FCS_EAPTLS_EXT.1.1. In the third selection, ‘FCS_TLSS_EXT.1 and FCS_TLSS_EXT.2’ or 'FCS_DTLSS_EXT.1 and FCS_DTLSS_EXT.2’ is selected 
              according to the TLS or DTLS support indicated in the second selection, with
              the expectation that the corresponding SFRs from the Base-PP are claimed.
              <h:p/>
              The selection in FCS_EAPTLS_EXT.1.2 matches the first selection in FCS_EAPTLS_EXT.1.1.
              <h:p/>
              The ST author claims any additional supported authentication methods in FCS_EAPTLS_EXT.1.3. Each supported method is claimed independently, even if combinations of the methods are required for individual claimant authentication. 
              For any authentication methods that are only supported by pass-through functionality, the ST author should claim 'other authentication-verification protocls via pass-through functionality' without claiming the corresponding method
              in the same selection. Pass-through functionality can typically support any authentication method, including ones not specified in the SFR.
              </note>
            <aactivity>
              <TSS>The evaluator shall examine the ST to ensure the EAP protocol is described in accordance with the claimed RFC and, for each supported mode, the evaluator ensures the ST describes the following:
                <h:ul>
                  <h:li>The mechanism to authenticate a claimant uses (D)TLS with client certificate authentication in combination with any other supported authenticator outputs, and any configurable features.</h:li>
                  <h:li>The source of randomness meets FCS_RBG_EXT.1 for use in key and nonce generation for the underlying (D)TLS channel and supported authentication methods.</h:li>
                </h:ul>
                <h:p/>
                The evaluator shall also verify that the ST contains a description of the user access policy, 
                including which authenticator outputs are required under the default configuration and which features of the user access policy are configurable. 
                <h:p/>
              </TSS>
              <Guidance>The evaluator shall ensure that the operational guidance includes any instructions for configuring the TOE to support the claimed functions.
                <h:p/>
                If any features of the access control policy are configurable (e.g. the supported authentication mechanism), the evaluator shall confirm that the operational guidance describes how to configure these features.
              </Guidance>
              <Tests>
                The evaluator shall perform the following tests:
                <testlist>
                  <test>TLS/DTLS testing is performed as part of FCS_TLSS_EXT.1 and .2 or FCS_DTLSS_EXT.1 and .2. 
                    When TLS/DTLS cannot be invoked directly using available TOE interfaces, the test procedures are modified in the following manner:
                    <h:ul>
                    <h:li>When required to send a client handshake to the TOE, the evaluator shall establish a connection with the test relying party and sends the specified 
                      TLS client handshake messages in response to requests from the test relying party.</h:li> 
                    <h:li>The evaluator ensures the test relying party encapsulates the TLS handshake messages received from the test client and forwards the EAP messages to the TOE. 
                      Alternatively the evaluator may use a test relying party to modify client handshake messages as specified. 
                      When required to observe TLS server responses produced by the TOE, the evaluator shall ensure the test relying party properly extracts the TLS messages from the EAP messages, 
                      and shall observe the response received at the test TLS client to verify that the TOE responds as indicated in test procedures. 
                      Alternatively, the evaluator may extract and reconstruct TLS responses received within the EAP messages received from the TOE at the test relying party.</h:li>
                    </h:ul>
                  </test>
                  <test>
                    EAP testing: For each EAP mode supported, the evaluator shall perform any configuration of the TOE necessary to select the desired mode according to AGD instructions, and perform the following tests: 
                    <h:ul>
                      <h:li>
                        Test 2a: The evaluator shall determine the user access policy enforced by the TOE (if the TOE has a configurable user access policy, the evaluator may configure the TOE according to operational guidance 
                        to require claimant authentication using only a certificate to simplify subsequent test procedures). 
                        The evaluator shall initiate an authentication request from a test relying party to the TOE for a valid claimant registered with the TOE. 
                        The evaluator shall observe that once the EAP identity is established, the TOE sends an EAP request indicating the expected EAP mode (EAP-TLS or EAP-TTLS) and having the start-bit set.
                        <h:p/>
                        The evaluator shall ensure a TLS client hello message from the valid claimant at a test client is EAP encapsulated by the test relying party and provided to the TOE. 
                        The evaluator shall observe that the TOE responds with an EAP encapsulated hello messages to include a certificate request message.
                        <h:p/>
                        The evaluator shall ensure the test client successfully completes the TLS handshake, and the test relying party properly encapsulates the TLS messages, to include the client finished message, 
                        and observes that the TOE that the TOE responds in a manner indicating the TLS channel was successfully established. 
                        Note – if the user access policy is to only require certificate verification, then the expected response is an EAP-success message. 
                        If the user access policy requires additional factors as supported under EAP-TTLS, additional EAP-TTLS messages are sent to the test relying party to request additional factors 
                        from the test client that are encrypted under the TLS tunnel established between the claimant and the TOE. In this case the evaluator observes these requests at the test client to confirm the certificate verification 
                        was successful.
                      </h:li>
                      <h:li>
                        Test 2b: The evaluator shall initiate an authentication request from the test relying party for a valid claimant registered with the TOE, different than the claimant used for Test 2a if performed. 
                        The evaluator shall send appropriate encapsulated TLS handshake messages to the TOE, to include a valid certificate response, 
                        but send an EAP-encapsulation of a modified client finished message to the TOE. 
                        The evaluator shall observe that the TOE does not send an EAP-success message; the TOE is allowed either to send an EAP-request message to initiate a new TLS handshake or an EAP-Failure message.
                      </h:li>
                      <h:li>
                        Test 2c [conditional on support for additional authentication factors under EAP-TTLS]: For each combination of authentication factors supported by the TOE’s user authentication policy, 
                        the evaluator shall follow the operational guidance to configure the TOE’s user access policy to require the desired combination. 
                        The evaluator shall initiate an authentication request from a test client with a registered claimant having valid credentials for all factors. 
                        The evaluator shall observe that the TOE responds to the authentication request with an exchange of EAP-requests to successfully establish a mutually authenticated TLS/DTLS tunnel 
                        and that on completion, the TOE provides additional EAP-requests that when decrypted at the test client results in prompts for additional factors. 
                        <h:p/>
                        For each additional factor in the combination, the evaluator shall input an incorrect value for requested authentication factors and observe that the TOE responds with an EAP-request 
                        that prompts the claimant to re-enter the value. 
                        The evaluator shall then input the correct value and observe that the TOE responds with an EAP-request resulting in a prompt for the next factor. 
                        The evaluator shall continue, in turn entering first, invalid, and then valid entries until all factors have been successfully provided. 
                        The evaluator shall confirm that on successful submission of valid factors, the TOE sends an EAP-Success message to the test relying party.
                      </h:li>
                    </h:ul>
                  </test>
                </testlist>
              </Tests>
            </aactivity>
          </f-element>
        </f-component>
        
        <ext-comp-def title="Authentication Protocol" fam-id="FCS_RADIUS_EXT">
          <fam-behavior>Components in this family define requirements for implementation of authentication protocols.</fam-behavior> 
        </ext-comp-def>
        
        <f-component name="Authentication Protocol" cc-id="fcs_radius_ext.1">
          <consistency-rationale>This SFR applies to implementation of authentication protocols, which is beyond the original scope of the Base-PP.</consistency-rationale>
          
          <comp-lev>requires the TSF to implement the specified authentication protocols.</comp-lev>
          <management>The following actions could be considered for the management functions in FMT:
            <h:ul>
              <h:li>Ability to configure RADIUS shared secret</h:li>
              <h:li>Ability to define authorized NAS</h:li>
            </h:ul></management>
          <audit>The following actions should be auditable if FAU_GEN Security audit data generation is included in the PP/ST:
            <h:ul>
              <h:li>Protocol failures</h:li>
              <h:li>Success/failure of authentication</h:li>
            </h:ul>
          </audit>
          <dependencies>FCS_EAPTLS_EXT.1 EAP-TLS Protocol</dependencies>
          
          <f-element>
            <title>
              The TSF shall implement the <selectables>
                <selectable>RADIUS protocol as specified in RFC 2865</selectable>
                <selectable>DIAMETER protocol as specified in RFC 6733</selectable>
                <selectable><assignable>other direct identity federation protocol</assignable></selectable></selectables>
               for communication of identity and authentication information with a relying party.
            </title>
          </f-element>
          <f-element>
            <title>
              The TSF shall implement encapsulated EAP in accordance with FCS_EAPTLS_EXT.1.
            </title>
          </f-element>
          <f-element>
            <title>
              The TSF shall provide <selectables>
                <selectable>a key indicator</selectable>
                <selectable>an encrypted parameter</selectable>
                <selectable>an encrypted value</selectable></selectables> 
              for a key held by the successfully authenticated claimant derived from the supported EAP mode and provided to the relying party in accordance with the protocol indicated in FCS_RADIUS_EXT.1.1.
            </title>
            <note role="application">
              The ST author describes how the TSF communicates with a relying party at the application layer to receive authentication requests and provide identity assertions. 
              RADIUS and DIAMETER protocols are used with AAA servers when the relying party is a NAS, 
              but other direct access identity federation protocols that support FCS_EAPTLS_EXT.1 and identify a key held by the authenticated claimant that can be confirmed by the relying party are acceptable. 
              If other protocols are claimed, the ST author includes the RFCs and indicates the messages used for authentication requests and assertions. 
              <h:p/>
              The ST author indicates which keys held by the authenticated claimant are available to the relying party for key-holder verification. 
              For RADIUS/DIAMETER, the encrypted key is the derived from the EAP-TLS/EAP-TTLS master key established during the TLS handshake, 
              and used by the relying party as the AUTH MSK/security association for the IPsec session established between the network access server and the authenticated claimant. 
              More generally, a key indicator can be a reference identifier for a shared secret key, or a public key, certificate, or other identifier associated with a private asymmetric key controlled by the authenticated claimant.
            </note>
            <aactivity>
              <TSS>The evaluator shall review the ST to ensure the supported protocols are described and that the description includes the following: <h:ul>
                <h:li>Types of claimant-held keys that can be used by the relying party for key-holder verification in accordance with the supported EAP mode claimed in FCS_EAPTLS_EXT.1</h:li>
                <h:li>How information provided by the TOE to the relying party allows the relying party to perform key-holder verification using the key</h:li> 
                <h:li>How key related information provided by the TOE is protected in transit to the relying party.</h:li>
              </h:ul><h:p/>
              </TSS>
              <Guidance>The evaluator shall verify that all configurable features of the TSF are described and instructions are provided to meet the requirements.<h:p/></Guidance>
              <Tests>The evaluator shall perform the following test in conjunction with testing for FCS_EAP-TLS_EXT.1 after successful authentication:
                <testlist>
                  <test>
                    For each type of claimant held key supported, the evaluator shall confirm that communication between the test client and the test relying party encrypted using the indicated key is successful.
                  </test>
                </testlist>
               </Tests>
            </aactivity>
          </f-element>
        </f-component>
        

        <ext-comp-def title="Cryptographic Key Storage" fam-id="FCS_STG_EXT">
          <fam-behavior>Components in this family define requirements for secure storage of cryptographic keys.</fam-behavior> 
        </ext-comp-def>
        
        <f-component name="Authentication Protocol" cc-id="fcs_radius_ext.1">
          <consistency-rationale>This SFR is consistent with the FPT_SKP_EXT.1 requirement of the Base-PP but requires the TSF to implement a specific method of protecting key data rather than a general statement
          that such data is not stored in plaintext.</consistency-rationale>
          
          <comp-lev>requires the TSF to identify a mechanism used to securely store cryptographic keys.</comp-lev>
          <management>No specific management functions are identified.</management>
          <audit>There are no auditable events foreseen.</audit>
          <dependencies>None</dependencies>

          <f-element>
            <title>
              Persistent private and secret keys shall be stored within the TSF
              <selectables linebreak="yes">
                <selectable>encrypted within a hardware protected key</selectable>
                <selectable>in a hardware cryptographic module</selectable>
                <selectable>within an isolated execution environment protected by a hardware key</selectable></selectables>.
            </title>
            <aactivity>
              <TSS>The evaluator shall verify the TSS includes a description of protected key storage.<h:p/>
              </TSS>
              <Guidance>The evaluator shall verify that the operational guidance includes any information needed to configure the TOE to meet this requirement.<h:p/></Guidance>
              <Tests>There are no test EAs for this component.
              </Tests>
            </aactivity>
          </f-element>
        </f-component>
        
      </sec:man_fcs>
      
      
      <sec:man_fia title="Identification and Authentication (FIA)">
        
        <f-component name="Authentication Failure Handling (Claimant)" cc-id="fia_afl.1" iteration="AuthSvr">
          
          <consistency-rationale>This SFR defines functional behavior enforced on external users being authenticated by the TOE, which is functionality that is not covered by the Base-PP.</consistency-rationale>

          <f-element>
            <title>The TSF shall detect when [<h:i>an administrator configurable positive integer <h:b>of successive</h:b></h:i>] unsuccessful authentication attempts occur related to [<h:i>claimants attempting to authenticate</h:i>]. 
            </title>
          </f-element>
          <f-element><title>When the defined number of unsuccessful authentication attempts has been [<h:i>met</h:i>], 
            the TSF shall <selectables onlyone="yes">
              <selectable>prevent the offending remote entity from successfully authenticating until 
                <assignable>action</assignable> is taken by a local Administrator</selectable>
              <selectable>prevent the offending claimant from successfully authenticating until an administrator-defined time period has elapsed</selectable></selectables>. 
            </title>
            <note role="application">
              This requirement applies to claimant authentication attempts in support of an authentication service provided for a federated relying party. 
              This requirement does not apply to login to the TOE by privileged users for administrative accesses; these cases are addressed by the Base-PP iteration of this SFR. 
              Responses to authentication queries to aid the claimant in providing acceptable authenticators is not considered a preventative action and are allowed prior to reaching the lockout threshold. 
              The “action” taken by a local administrator is implementation specific and is defined in the operational guidance (for example, lockout reset or password reset). 
              The ST author chooses one of the selections for handling of authentication failures depending on how the TOE has implemented this handler. 
          </note>
            <aactivity>
              <TSS>
                The evaluator shall examine the TSS to verify that it contains a description of how successive unsuccessful authentication attempts by claimants are detected and tracked. 
                The evaluator shall verify that the TSS describes the method by which the offending claimant is prevented from successfully being authenticated by the TOE, and the actions necessary to restore this ability. 
                <h:p/>
              </TSS>
              <Guidance>The evaluator shall examine the operational guidance to verify that it describes how to configure the threshold for unsuccessful claimant authentication attempts and how to perform 
                any actions that affect claimants that are limited in this manner (e.g. instructions for configuring the lockout period or for manually unlocking the offending claimant).<h:p/>
              </Guidance>
              <Tests>
                The evaluator shall perform the following tests in conjunction with testing for FCS_EAPTLS_EXT.1 test 2a and, if applicable, test 2c for each claimant authentication method:
                <testlist>
                  <test>
                    The evaluator shall follow the operational guidance to configure a number of failed attempts that will cause lockout behavior to be enforced against a claimant. 
                    The evaluator shall establish a registered user and provide invalid input for the authentication method repeatedly to reach the configured limit. 
                    The evaluator shall then observe the configured penalty is imposed.
                  </test>
                  <test>
                    If the administrator action selection is claimed in FIA_AFL.1.2/AuthSvr, the evaluator shall ensure that following the operational guidance for restoring access to a locked-out claimant will subsequently allow that claimant to be
                    authenticated.
                    <h:p/>
                    If the time period selection is claimed in FIA_AFL.1.2/AuthSvr, the evaluator shall follow the operational guidance to configure a certain lockout time for claimants that are locked out due to excessive authentication failures.
                    The evaluator shall cause a claimant to be locked out in this manner, wait for a time period that is just less than the configured value, and verify that an authentication attempt using valid credentials still does not result in
                    successful access.
                    The evaluator shall then repeat this behavior but wait for just after the configured time period has elapsed to show that an authentication attempt using valid credentials results in successful access.
                  </test>
                </testlist>
              </Tests>
            </aactivity>
          </f-element>
        </f-component>
      
      
        <f-component name="X.509 Certificate Validation (Claimant)" cc-id="fia_x509_ext.1" iteration="AuthSvr">
          <consistency-rationale>The Base-PP defines X.509 validation requirements for external entities presenting certificates to the TOE. This PP-Module
          defines a separate iteration of this function to define the certificate validation behavior that is enforced against claimants requesting to be authenticated by the TOE. It is substantially refined
          from its original definition to address issues specific to the handling of claimant certificates.</consistency-rationale>
          <f-element>
            <title>
              The TSF shall validate certificates in accordance with the following rules: 
              <h:ul>
                <h:li>RFC 5280 <h:b>version 3</h:b> certificate validation and certification path validation supporting <h:b><selectables>
                  <selectable>a minimum path length of <assignable>value greater than or equal to 3</assignable></selectable>
                  <selectable>no prior constraints on path length</selectable></selectables></h:b></h:li>
                <h:li>The certification path must terminate with a CA certificate <h:b>trusted by the TSF specifically for claimant authentication.</h:b></h:li>
                <h:li>The TSF shall validate a certification path by ensuring that all CA certificates in the certification path contain the basicConstraints extension with the CA flag set to TRUE.</h:li>
                <h:li>The TSF shall validate the revocation status of <h:b>each certificate in the certificate path <selectables linebreak="yes">
                  <selectable>containing an OCSP provider in the AIA extension using the Online Certificate Status Protocol (OCSP) as specified in RFC 6960</selectable>
                  <selectable>containing a CRL distribution point in the 
                    CRLDP extension or AIA extension using <selectables>
                      <selectable>a Certificate Revocation List (CRL) as specified in RFC 5280 Section 6.3</selectable>
                      <selectable>a Certificate Revocation List (CRL) as specified in RFC 5759 Section 5</selectable></selectables></selectable></selectables></h:b>.
                </h:li>
                <h:li>
                  The TSF shall validate the extendedKeyUsage field <h:b>is present and contains key usage values</h:b> according to the following rules: <h:b>
                  <selectables linebreak="yes">
                    <selectable>Certificates do not assert anyExtendedKeyUsage (OID 2.5.29.37.0)</selectable>
                    <selectable>Client certificates associated with authenticated entities presented for <selectables>
                      <selectable>TLS</selectable>
                      <selectable>DTLS</selectable></selectables> shall have the Client Authentication purpose (id-kp 2 with OID 1.3.6.1.5.5.7.3.2) in the extendedKeyUsage field.</selectable>
                    <selectable>
                      <selectables linebreak="yes">
                        <selectable>Server certificates presented for <selectables><selectable>TLS</selectable><selectable>DTLS</selectable></selectables> shall 
                          have the Server Authentication purpose (id-kp 1 with OID 1.3.6.1.5.5.7.3.1) in the extendedKeyUsage field.</selectable>
                        <selectable>Certificates presented for IPsec shall have the ipsec-IKE purpose (id-kp 17 with OID 1.3.6.1.5.5.7.3.17)</selectable>
                        <selectable>OCSP certificates presented for OCSP responses shall have the OCSP Signing purpose (id-kp 9 with OID 1.3.6.1.5.5.7.3.9) in the extendedKeyUsage field.</selectable></selectables></selectable></selectables></h:b>.
                </h:li><h:b>
                <h:li>
                  The TSF shall validate that each CA certificate in the certification path indicating a path length constraint in the basicConstraints 
                  extension does not have more than the specified number of subordinate CA certificates in the certification path from the end-entity certificate 
                  to the CA certificate indicating the constraint, not counting the CA certificate itself or any self-issued certificates in the certification path.
                </h:li>
                <h:li>
                  The TSF shall process name constraints of type Directory Name and <selectables>
                    <selectable>rfc822Name</selectable>
                    <selectable>dnsName</selectable>
                    <selectable>UPN Name (Ohter Name = id-ms-san-sc-logon-upn)</selectable>
                    <selectable><assignable>other name type</assignable></selectable>
                    <selectable>no other name type</selectable></selectables> 
                  by verifying that each name of a supported name type present in the end-entity certificate subject field or subjectAlternateName extension, 
                  is allowed in each CA certificate in the certification path, is not disallowed by any of the CA certificates in the certification path, 
                  and that each name type included in the end-entity certificate and constrained by a CA certificate in the certification path is processed.
                </h:li>
                <h:li>
                  The TSF shall process the following certificate extensions: <selectables>
                    <selectable>Certificate Policy extension in accordance with RFC 5280 and <selectables linebreak="yes">
                      <selectable>Policy mapping extension in accordance with RFC 5280</selectable>
                      <selectable>Policy constraints extension in accordance with RFC 5280</selectable>
                      <selectable>Inhibit anyPolicy extension in accordance with RFC 5280</selectable>
                      <selectable>No other policy related extension</selectable></selectables> in support of claimant authentication and <assignable>
                        other intended purposes and limitations of policy related extension processing</assignable></selectable>
                    <selectable><assignable>other standard extensions</assignable></selectable>
                    <selectable>no other extensiosn</selectable></selectables>.
                </h:li></h:b>
              </h:ul>
            </title>
            <note role="Application">
              The ST author claims supported certificate validity checking options for each rule. For name constraints, all supported name types used to match names presented in a certificate to registered users 
              and the associated standard matching method are described.
              <h:p/>
              The ST author claims supported certificate policies. ‘Policy Constraints…’ is claimed if the TOE’s authentication policy depends on the certificate policies for claimant certificates. 
              Other policy related extensions within the selection are claimed if supported. 
              The extension inhibitPolicyMapping is not claimed if the TSF does not support certificate chains of length 4 or more. 
              The Policy related extensions, if supported, are primarily used in this PP-Module for claimant authentication, but are allowed for other certificate authentications. 
              The ST author specifies the intended use and any limits of support for these extensions or specifies ‘no other purposes or constraints’ in the assignment of this selection.
              <h:p/>
              The ST author specifies any additional supported X509 extensions, and the associated extension processing rules used to determine claimant identity attributes or conditions that can be used in the TOE’s authentication policy. 
            </note>
          </f-element>
          <f-element>
            <title>The TSF shall only treat a certificate as a CA certificate if the basicConstraints extension is present and the CA flag is set to TRUE.</title>
            <aactivity>
              <TSS>
                The evaluator shall ensure the TSS describes where the check of validity of the certificates takes place. 
                The evaluator ensures the TSS also provides a description of the certificate path validation algorithm. 
              </TSS>
              <Guidance>
                The evaluator shall ensure that instructions for any configurable features of the validation process are included. 
                If the ST includes provisions for exception processing of certificate revocation status information,
                the evaluator shall ensure the operational guidance contains instructions on how the indicated options are configured. 
                <h:p/>
                If the TOE supports processing of the policy constraints extension and the TOE requires configuration to validate the policy of a claimant certificate, the evaluator shall verify that the operational guidance includes instructions for 
                configuring this behavior.
              </Guidance>
              <Tests>
                The evaluator shall perform the following tests. The tests for the extendedKeyUsage rules, name constraints and policy constraints, if supported, are performed in conjunction with the uses that require those rules.
                <testlist>
                  <test>
                    The evaluator shall demonstrate that validating a certificate without a valid certification path results in the function failing, for each of the following reasons, in turn: 
                    <h:ul>
                      <h:li>by establishing a certificate path in which one of the issuing certificates is not a CA certificate</h:li>
                      <h:li>by omitting the basicConstraints field in one of the issuing certificates</h:li>
                      <h:li>by setting the basicConstraints field in an issuing certificate to have CA=False</h:li>
                      <h:li>by omitting the CA signing bit of the key usage field in an issuing certificate</h:li>
                      <h:li>by setting the path length field of a valid CA field to a value strictly less than the certificate path</h:li>
                    </h:ul>. <h:p/>
                    The evaluator shall then establish a valid certificate path consisting of valid CA certificates, and demonstrate that the function succeeds. 
                    The evaluator shall then remove trust in one of the CA certificates, and show that the function fails. 
                  </test>
                  <test>
                    The evaluator shall demonstrate that validating an expired certificate results in the function failing. 
                  </test>
                  <test>
                    The evaluator shall test that the TOE can properly handle revoked certificates – conditional on the revocation method that is selected; if multiple methods are selected, then the test is repeated for each method. 
                    The evaluator tests revocation for each certificate in the trust chain which advertises certificate status information. 
                    The evaluator shall ensure that a valid certificate is used, and that the validation function succeeds. 
                    The evaluator shall then attempt the test with a certificate that will be revoked (for each method chosen in the selection) and verify that the validation function fails. 
                  </test>
                  <test>
                    If any OCSP option is selected, the evaluator shall present a delegated OCSP certificate that does not have the OCSP signing purpose and verify that validation of the OCSP response fails. 
                    If CRL is selected, the evaluator shall configure the CA to sign a CRL with a certificate that does not have the cRLsign key usage bit set and verify that validation of the CRL fails.
                  </test>
                  <test>
                    [conditional] If the TOE supports EC certificates, then the evaluator shall establish a valid, trusted certificate chain consisting of an EC leaf certificate, 
                    an EC Intermediate CA certificate not designated as a trust anchor, and an EC certificate designated as a trusted anchor, 
                    where the elliptic curve parameters are specified as a named curve. The evaluator shall confirm that the TOE validates the certificate chain. 
                  </test>
                  <test>
                    [conditional] If the TOE supports EC certificates, then the evaluator shall replace the intermediate certificate in the certificate chain for Test 5 with a modified certificate, 
                    where the modified intermediate CA has a public key information field where the EC parameters uses an explicit format version of the Elliptic Curve parameters 
                    in the public key information field of the intermediate CA certificate from Test 5, and the modified Intermediate CA certificate is signed by the trusted EC root CA, but having no other changes. 
                    The evaluator shall confirm the TOE treats the certificate as invalid.
                  </test>
                  <test>
                    The evaluator shall test the following name constraints: <h:ul>
                      <h:li>Test 7a: For each name type supported, the evaluator shall establish a valid certificate for a registered entity. 
                        The evaluator shall ensure the certificate has a valid path length of at least 3, consisting of a trusted root, 
                        an issuing CA that is not a trust anchor, and the leaf certificate representing the entity. 
                        The evaluator shall ensure that the leaf certificate includes a single name of the supported name type and no other DN or SAN entries. 
                        The evaluator shall initiate an application requiring authentication of that entity using the certificate and verify the TSF successfully authenticates the entity. </h:li>
                      <h:li>Test 7b: For each leaf certificate used in test 7a, the evaluator shall establish a new leaf certificate that includes the same name and name type, 
                        but which is issued by a different subordinate CA asserting an allowed-list that does not include the name for the name-type. 
                        The evaluator shall ensure the subordinate CA is included in a valid chain to the same trusted root. 
                        The evaluator shall initiate the same application attempt as in test 7a for the new certificate and observe that the TSF indicates the certificate is invalid.</h:li>
                      <h:li>Test 7c: For each leaf certificate used in test 7a, 
                        the evaluator shall establish a new leaf certificate that includes the same name and name type, 
                        but which is issued by a different subordinate CA asserting a deny-list matching the name for the name type. 
                        The evaluator shall ensure the subordinate CA is included in a valid certificate path to the same trusted root. 
                        The evaluator shall initiate the same application attempt as in test 7a using the new certificate and observe that the TSF indicates the certificate is invalid. </h:li>
                    </h:ul> 
                  </test>
                  <test>
                    [conditional] If the TOE supports processing of the policy constraints extension, then for each distinct purpose and within the constraints indicated in the ST 
                    (claimant authentication and any other supported subject types), the evaluator shall follow the operational guidance as necessary to configure the TOE to require the subject’s certificate to assert a specific certificate policy. 
                    The evaluator shall perform the following sub-tests: <h:ul>
                      <h:li>Test 8a: The evaluator shall establish a certificate for the subject asserting the certificate policy OID required, issued by a Certification Authority also specifying the required certificate policy. 
                        The evaluator shall present the established certificate for authentication and verify that the TSF successfully validates the certificate. </h:li>
                      <h:li>Test 8b: The evaluator shall repeat test 8a using a certificate asserting the required policy but issued by a Certification Authority only asserting the ‘anyPolicy’ OID (value {2 5 29 32 0}) in its policy constraints extension. The evaluator shall observe that the TSF successfully validates the certificate.</h:li>
                      <h:li>Test 8c: [conditional] If the ST indicates support for the policy mapping extension, 
                        the evaluator shall repeat test 8a using a certificate asserting a new policy OID that does not match the required policy OID, 
                        which is issued by a CA asserting the new policy OID in the policy constraints extension, 
                        and which is in turn issued by a CA asserting the required OID in its certificate constraints extension and containing a policy mapping extension 
                        including the mapping of the asserted policy to the required policy. 
                        The evaluator shall observe that the TSF successfully validates the certificate.<h:p/> 
                        Note that installing a root CA trusted by the TOE with the required policy constraints and policy mapping extensions may be required if the TSF limits the path length of certificate chains.</h:li>
                      <h:li>Test 8d: [conditional] If the ST indicates support for both policy mapping and policy constraints extensions and also supports certificate chains of length 4 or more, 
                        the evaluator shall establish a certificate for the subject asserting a new policy OID that does not match the required policy OID, 
                        which is issued by a CA asserting the new policy OID, which in turn is issued by a CA which includes the policy mapping extension mapping the required policy OID to the new policy OID, 
                        which is in turn issued by a CA with the extension policy constraints with the inhibitPolicyMapping field having value 0. 
                        The evaluator shall present the certificate to the TSF for authentication and observe that the TSF indicates the certificate is invalid.</h:li>
                      <h:li>Test 8e: [conditional] If the ST indicates support for both policy mapping and policy constraints extensions, 
                        the evaluator shall select a policy OID not required for authentication in the TOE’s current configuration. 
                        The evaluator shall establish a certificate for the subject that does not assert the (non-required) policy, 
                        which is issued by a CA also asserting the new policy OID, which in turn, is issued by a CA asserting the ‘anyPolicy’ OID and having a critical policy constraints extension 
                        with explicitPolicy field with value 0. The evaluator shall present the certificate to the TSF for authentication and observe that the TSF indicates the certificate is invalid.</h:li>
                      <h:li>Test 8f: The evaluator shall establish a certificate for the subject asserting the required policy but issued by a Certification Authority that does not include any certificate policy related extensions. 
                        The evaluator shall present the certificate for authentication and observe that the TSF indicates the certificate is invalid.</h:li>
                      <h:li>Test 8g: The evaluator shall establish a certificate for the subject asserting the required certificate policy issued by a Certification Authority that includes only asserts a single, 
                        non-matching policy OID in its policy related extensions (i.e. the CA certificate does not include the matching OID, ‘anyPolicy’ assertions or assert an OID that is mapped to the required OID 
                        via policy matching extensions by previous Certification Authorities in the certificate chain, if supported). 
                        The evaluator shall present the certificate to the TSF for authentication and observe the TSF indicates the certificate is invalid.</h:li>
                      <h:li>Test 8h: [conditional] If the ST indicates the inhibitAnyPolicy extension is supported, the evaluator shall establish a certificate for the subject asserting the required policy issued by a CA 
                        asserting the ‘anyPolicy’ OID, which is in turn issued by a CA with an inhibitAny extension with value 0. 
                        The evaluator shall present the certificate to the TSF for authentication and observe the TSF indicates the certificate is invalid. <h:p/>
                        Note that installing a root CA trusted by the TOE with the inhibitAny extension may be required if the TSF limits the path length of certificate chains.</h:li>
                    </h:ul>
                  </test>
                </testlist>
              </Tests>
            </aactivity>
          </f-element>
        </f-component>
          
    
      <f-component name="Re-Authenticating" cc-id="fia_uau.6">
        <consistency-rationale>This SFR defines support for re-authentication of administrators, which expands on the authentication functionality defined in the Base-PP.</consistency-rationale>
        <f-element>
          <title>The TSF shall re-authenticate the <h:b>administrative</h:b> user under the conditions [<h:i>when the user
            changes their password, <selectables>
              <selectable>following TSF-initiated session locking</selectable>
              <selectable><assignable>other conditions</assignable></selectable>
              <selectable exclusive="yes">no other conditions</selectable></selectables></h:i>]. 
          </title>
          <aactivity>
            <TSS>There are no TSS evaluation activities for this component.<h:p/></TSS>
            <Guidance>The evaluator shall ensure that the operational guidance includes instructions on how an administrator of the TOE can change their own password.<h:p/></Guidance>
            <Tests>
	      The evaluator will access the TOE using a particular administrative account and then attempt to change the password of that account as directed by the operational guidance.
              While making this attempt, the evaluator will verify that re-authentication is required.
	      <h:p>
		If other re-authentication conditions are specified, the evaluator shall cause those conditions to
		occur and verify that the TSF re-authenticates the authenticated user.
	      </h:p>
            </Tests>
          </aactivity>
        </f-element>
      </f-component>
      </sec:man_fia>
      
      <sec:man_fmt title="Security Management (FMT)">
        <f-component name="Specification of Management Functions (Authentication Server)" id="fel-managementfun-as" cc-id="fmt_smf.1" iteration="AuthSvr">
			<consistency-rationale>This SFR defines additional management functionality that is specific to the PP-Module’s product type and would therefore not be expected to be present in the Base-PP.</consistency-rationale>
			<f-element>
			<title>The TSF shall be capable of performing the following management functions: 
			  <h:ul>
			    <h:li>Ability to configure claimant verification data</h:li>
			    <h:li>Ability to manage relying party trust store data</h:li>
			    <h:li>Ability to enable, disable, and determine and modify the behavior of all the security functions of the TOE identified in this PP-Module to include <assignable>list of supported functions</assignable></h:li>
			    <h:li><selectables linebreak="yes">
			      <selectable>Ability to configure IPsec functionality</selectable>
			      <selectable>Ability to configure DTLS functionality</selectable>
			      <selectable>Ability to configure TLS functionality</selectable>
			      <selectable>Ability to manage claimant authentication policy</selectable>
			      <selectable>No other functions</selectable>
			    </selectables></h:li>
			  </h:ul>.
			</title>
			  <note role="Application">
			    This SFR defines additional management functions for the TOE beyond what is defined in the Base-PP as FMT_SMF.1. 
			  </note>
			<aactivity>
			  <TSS>
			    The evaluator shall verify that the TSS identifies all of the security-relevant management functions that apply to the security functions the TOE claims from this PP-Module.<h:p/>
			  </TSS>
			  <Guidance> 
			    For each claimed management function, the evaluator shall ensure that the operational guidance contains instructions for how to configure the function.<h:p/>
			  </Guidance>
			  <Tests>
			  For each claimed management function, the evaluator shall follow the operational guidance to configure the behavior of that function and ensure that applying the configuration settings have the intended effect. 
			  Note that some or all of these functions may be tested in the course of performing the test activities for other claimed SFRs. 
			  </Tests>
			</aactivity>
		</f-element>
		</f-component>
        </sec:man_fmt>
      
      
      <sec:man_fta title="TOE Access (FTA)">
        
        <f-component name="TOE Session Establishment" cc-id="fta_tse.1">
          <consistency-rationale>This SFR relates to the handling of claimants being authenticated by the TOE, which is functionality that is beyond the original scope of the Base-PP.</consistency-rationale>
          <f-element>
            <title>The TSF shall be able to deny <h:b>claimant</h:b> session establishment based on [<h:i>invalid certificate, 
              <selectables>
                <selectable><assignable>other identity attributes</assignable></selectable>
                <selectable>no other attributes</selectable></selectables></h:i>].</title>
            <note role="application">
              The intent of this SFR is to describe any circumstances that would cause a claimant’s authentication request to be rejected. 
              All compliant TOEs will reject authentication requests based on invalid credentials. 
              A compliant TOE may also impose additional limitations such as suspended accounts or time of day restrictions, depending on the capabilities of the TSF’s authentication mechanism.
            </note>
            <aactivity>
              <TSS>The evaluator shall examine the TSS to determine that all of the attributes on which a claimant session can be denied are specifically defined.<h:p/>
              </TSS>
              <Guidance>The evaluator shall examine the operational guidance to verify that it contains instructions for configuring each of the attributes identified in the TSS.<h:p/> </Guidance>
              <Tests>The evaluator shall successfully have a claimant be authenticated by the TOE. 
                For each attribute claimed in the SFR, the evaluator shall configure the TOE to deny user access based on a specific value of that attribute.
                The evaluator shall then attempt to establish a new session in contravention to the attribute setting while still providing valid authentication data. The evaluator shall observe that the access attempt fails.  
              </Tests>
            </aactivity>
          </f-element>
        </f-component>
      </sec:man_fta>
      
	  <sec:man_ftp title="Trusted Path/Channels (FTP)">
		  <f-component cc-id="ftp_itc.1" name="Inter-TSF Trusted Channel (Relying Party Communications)" iteration="NAS">
		  <consistency-rationale>
			  This SFR iterates the FTP_ITC.1 SFR defined in the Base-PP to define trusted communication channels for the functionality that is specific to this PP-Module.
			  </consistency-rationale>
			  <f-element>
			  <title>
			    The TSF shall provide <h:b><selectables>
			      <selectable>an IPsec</selectable>
			      <selectable>a RadSec</selectable>
			      <selectable>a mutually authenticated TLS</selectable>
			      <selectable>a mutually authenticated DTLS</selectable></selectables></h:b>
			    communication channel between itself and <h:b>a relying party</h:b> that is logically distinct from other communication channels and provides assured 
			    identification of its end points and protection of the channel data from modification or disclosure.
				  </title>
				</f-element>
			    <f-element>
		<title>
		  The TSF shall permit [<h:i>the TSF, <h:b>or the relying party</h:b></h:i>] to initiate communication via the trusted channel.
		</title>
	</f-element>
			  <f-element>
			    <title>The TSF shall initiate communication via the trusted channel for [<h:i>responses to authentication request messages received from the relying party</h:i>].</title>
				  <aactivity>
				    <TSS>
				      The evaluator shall examine the TSS to determine that, for all communications with authorized IT entities identified in the requirement, 
				      each communications mechanism is identified in terms of the allowed protocols for that IT entity. 
				      The evaluator shall also confirm that all protocols listed in the TSS are specified and included in the requirements in the ST. 
				    </TSS>
				    <Guidance>
				      The evaluator shall confirm that the guidance documentation contains instructions for establishing and reestablishing the allowed protocols with each authorized IT entity. 
				    </Guidance>
				    <Tests>For each claimed trusted channel mechanism, the evaluator shall configure the TOE to interact with a relying party using that channel and verify using packet captures that the claimed mechanism
				    is used.</Tests>
				  </aactivity>	  
			  </f-element>
		  </f-component>
      </sec:man_ftp>
        
    </man-sfrs>
    <opt-sfrs>
      <sec:opt_fcs title="Cryptographic Support (FCS)">
        
       
        <f-component name="Cryptographic Key Distribution (802.11 Keys)" cc-id="fcs_ckm.2" iteration="DISTRIB">
          <consistency-rationale>This SFR defines an additional use for the cryptographic and self-protection mechanisms defined in the Base-PP.</consistency-rationale>
          <f-element>
            <title>The TSF shall distribute <h:b>the IEEE 802.11</h:b> keys in accordance with a
              specified key distribution method: [<h:i>trusted channel protocol specified in FPT_ITT.1(Base-PP) </h:i>] that meets the following: [<h:i>standards specified in the various iterations of FCS_COP.1</h:i>] <h:b>and
                does not expose the cryptographic keys</h:b>.
            </title>
            <note role="application">
	      <h:p>
              This requirement applies to any key necessary for successful IEEE 802.11 connections
              not covered by FCS_CKM.2/GTK.
	      In cases where a key must be distributed to other APs, this
              communication must be performed via a mechanism of commensurate cryptographic strength.
	      Because communications with any component of a distributed TOE are required to be
	      performed over a trusted connection, the transfer of these keys will be protected.
	      </h:p>
	      <h:p>
		FCS_COP.1 and FPT_ITT.1 are defined in the NDcPP.
	      </h:p>
	      </note>
            <aactivity>
              <TSS>The evaluator will examine the TSS to determine that it describes which keys are distributed outside
                the TOE, where they are sent, and the purpose for this transfer.<h:br/><h:br/></TSS>
              <Guidance>If this function is dependent on TOE configuration, the evaluator will confirm that the operational
              guidance contains instructions for how to configure that the keys are adequately protected.<h:br/><h:br/>
	      </Guidance>
              <Tests>This requirement will be tested in conjunction with the tests for the cryptographic primitives, the secure
                protocols, and FPT_ITT.1 (Base-PP).</Tests>
            </aactivity>
          </f-element>
        </f-component>
      </sec:opt_fcs>   

    <!-- FPT_ITT.1 removed because it exists in the NDcPP now  -->

    </opt-sfrs>
    <sel-sfrs>
      
      <sec:sel_fcs title="Cryptographic Support (FCS)">
        
        <ext-comp-def title="RadSec" fam-id="FCS_RADSEC_EXT">
          <fam-behavior>Components in this family describe requirements for implementation of the RadSec (RADIUS over TLS) protocol.</fam-behavior> 
        </ext-comp-def>
        <!-- added by TD0271 -->
        <f-component name="RadSec" cc-id="fcs_radsec_ext.1">
		  <depends on="s-radius"/>
          <consistency-rationale>This SFR defines the implementation of RadSec and the peer authentication method that it uses. 
            This relies on the TLS requirements defined by the Base-PP and may also use the X.509v3 certificate validation methods
            specified in the Base-PP, depending on the selected peer authentication method.</consistency-rationale>
          
          <comp-lev>requires the TSF to implement RadSec using a specified peer authentication method.</comp-lev>
          <management>No specific management functions are identified.</management>
          <audit>There are no auditable events foreseen.</audit>
          <dependencies>
	    FCS_TLSC_EXT.1 TLS Client Protocol<h:br/>
            <no-link>FIA_PSK_EXT.1</no-link> Pre-Shared Key Composition<h:br/>
            FIA_X509_EXT.1 X.509v3 Certificate Validation
	  </dependencies>
          <f-element>
            <title>
              The TSF shall implement RADIUS over TLS as specified in RFC 6614 to communicate securely with a RADIUS server.
            </title>
          </f-element>
          <f-element>
            <title>
            The TSF shall perform peer authentication using <selectables>
              <selectable id="s-x509-certs">X.509v3 certificates</selectable>
              <selectable id="s-radsec-psk">pre-shared keys</selectable>
            </selectables>.
            </title>
			  <ext-comp-def-title><title>
              The TSF shall perform peer authentication using <assignable>some authentication method</assignable>.
              </title></ext-comp-def-title>
            <note role="application">
	      <h:p>This SFR is applicable if "RADIUS over TLS" is selected in FTP_ITC.1.1.</h:p>
	      <h:p>
		If <xref to="s-x509-certs"/> is selected in FCS_RADSEC_EXT.1.2,
		then FCS_TLSC_EXT.2 from the NDcPP must be claimed. 
		If <xref to="s-radsec-psk"/> is selected in FCS_RADSEC_EXT.1.2, then FCS_RADSEC_EXT.2 and FIA_PSK_EXT.1 in this PP-Module must be claimed.
	      </h:p>
            </note>
            <aactivity>
              <TSS>
		  The evaluator will verify that the TSS description includes the use of
		  RADIUS over TLS, as described in RFC 6614.
		<h:p>
                  If X.509v3 certificates is selected, the evaluator will ensure that the TSS description includes the use of client-side certificates for TLS mutual authentication.
		</h:p>
	      </TSS>
              <Guidance>
		The evaluator will verify that any configuration necessary to meet the requirement must be contained in the guidance.<h:br/><h:br/>
	      </Guidance>
              <Tests>
		The evaluator will demonstrate the ability to successfully establish a RADIUS over TLS connection with a RADIUS server. 
                This test will be performed with X.509v3 certificates if selected and performed with pre-shared keys if selected.</Tests>
            </aactivity>
          </f-element>
        </f-component>
        
        <!-- added by TD0271 -->
        <f-component name="RadSec using Pre-Shared Keys" cc-id="fcs_radsec_ext.2">
		  <depends on="s-radsec-psk"/>
          <consistency-rationale>This SFR defines the implementation of RadSec when pre-shared key authentication is used. This functionality is outside the original scope of the Base-PP, but it relies on 
            the TLS client protocol implementation, cryptographic algorithms, and random bit generation functions defined by the Base-PP.</consistency-rationale>
          
          <comp-lev>requires the TSF to implement RadSec using pre-shared key authentication in a manner that conforms to relevant TLS specifications.</comp-lev>
          <management>No specific management functions are identified.</management>
          <audit>There are no auditable events foreseen.</audit>
          <dependencies>
	    FCS_CKM.1 Cryptographic Key Generation<h:br/>
            FCS_COP.1 Cryptographic Operation<h:br/>
            <no-link>FCS_RADSEC_EXT.1</no-link> RadSec<h:br/>
            FCS_RBG_EXT.1 Random Bit Generation
	  </dependencies>
          <f-element>
            <title>The TSF shall implement <selectables>
              <selectable>TLS 1.2 (RFC 5246)</selectable>
              <selectable>TLS 1.1 (RFC 4346)</selectable>
            </selectables> and no earlier TLS versions when acting as a RADIUS over TLS client that supports the following ciphersuites: 
              <selectables linebreak="yes">
                <selectable>TLS_PSK_WITH_AES_128_CBC_SHA</selectable>
                <selectable>TLS_PSK_WITH_AES_256_CBC_SHA</selectable>
                <selectable>TLS_DHE_PSK_WITH_AES_128_CBC_SHA</selectable>
                <selectable>TLS_DHE_PSK_WITH_AES_256_CBC_SHA</selectable>
                <selectable id="s-rsa_psk_aes_128_cbc">TLS_RSA_PSK_WITH_AES_128_CBC_SHA</selectable>
                <selectable id="s-rsa_psk_aes_256_cbc">TLS_RSA_PSK_WITH_AES_256_CBC_SHA</selectable>
                <selectable>TLS_PSK_WITH_AES_128_GCM_SHA256</selectable>
                <selectable>TLS_PSK_WITH_AES_256_GCM_SHA384</selectable>
                <selectable>TLS_DHE_PSK_WITH_AES_128_GCM_SHA256</selectable>
                <selectable>TLS_DHE_PSK_WITH_AES_256_GCM_SHA384</selectable>
                <selectable id="s-rsa_psk_aes_128_gcm">TLS_RSA_PSK_WITH_AES_128_GCM_SHA256</selectable>
                <selectable id="s-rsa_psk_aes_256_gcm">TLS_RSA_PSK_WITH_AES_256_GCM_SHA384</selectable>
              </selectables>.
            </title>
            <ext-comp-def-title>
              <title>The TSF shall implement <assignable>list of allowed TLS versions</assignable> and reject all other TLS and SSL versions. 
                The TLS implementation shall support the following ciphersuites for use when acting as a RADIUS over TLS client: <assignable>list of supported ciphersuites</assignable>.</title>
            </ext-comp-def-title>
            <note role="application">
	      <h:p>
		If any of the TLS_RSA_PSK ciphersuites are selected by the ST author,
	        it is necessary to claim the selection-based requirement FCS_RADSEC_EXT.3.
	      </h:p>
	      <h:p>
		The above ciphersuites are only for use when the TSF is acting as a RADIUS over TLS client,
		not for other uses of the TLS protocol. 
		The ciphersuites to be tested in the evaluated configuration are limited by this requirement. 
		The ST author should select the ciphersuites that are supported.
		If "X.509v3 certificates" is selected in FCS_RADSEC_EXT.1.2, 
		the ciphersuites selected in (and tested by) FCS_TLSC_EXT.2.1 are also supported for
		RADIUS over TLS client use.
	      </h:p>
            </note>
          </f-element>
          <f-element>
            <title>The TSF shall be able to <selectables>
              <selectable>accept</selectable>
              <selectable>generate using the random bit generator specified in FCS_RBG_EXT.1</selectable>
            </selectables> bit-based pre-shared keys.</title>
            <aactivity>
              <TSS>
		The evaluator will check the description of the implementation of this protocol in the TSS to ensure that the ciphersuites supported are specified. 
                The evaluator will check the TSS to ensure that the ciphersuites specified are identical to those listed for this component. 
                The evaluator will also verify that the TSS contains a description of the denial of old SSL and TLS versions.
		<h:p>
                  The evaluator will examine the TSS to ensure it describes the process by which the bit-based pre-shared keys are generated (if the TOE supports this functionality) 
                  and confirm that this process uses the RBG specified in FCS_RBG_EXT.1.
		</h:p>
	      </TSS>
              <Guidance>
		The evaluator will verify that any configuration necessary to meet the requirement must be contained in the guidance.
		<h:p>
                  The evaluator will also check the guidance documentation to ensure that it contains instructions on configuring the TOE so that RADIUS over TLS conforms to the description in the TSS 
                  (for instance, the set of ciphersuites advertised by the TOE may have to be restricted to
		  meet the requirements).
		</h:p>
		<h:p>
                  The evaluator will confirm the operational guidance contains instructions for either entering bit-based pre-shared keys or generating a bit-based pre-shared key (or both).
		</h:p>
	      </Guidance>
              <Tests/>
            </aactivity>
          </f-element>
        </f-component>
        
        
        <f-component name="RadSec using Pre-Shared Keys and RSA" cc-id="fcs_radsec_ext.3">
		  <depends on="s-rsa_psk_aes_128_cbc" on1="s-rsa_psk_aes_256_cbc" on2="s-rsa_psk_aes_128_gcm" on3="s-rsa_psk_aes_256_gcm"/>
          <consistency-rationale>This SFR defines the implementation of RadSec when pre-shared key authentication with RSA is used. This functionality is outside the original scope of the Base-PP, but it relies on 
            the TLS client protocol implementation, cryptographic algorithms, and random bit generation functions defined by the Base-PP.</consistency-rationale>
          
          <comp-lev>requires the TSF to validate the external entity used for trusted communications.</comp-lev>
          <management>No specific management functions are identified.</management>
          <audit>There are no auditable events foreseen.</audit>
          <dependencies>
	    FCS_RADSEC_EXT.2 RadSec using Pre-Shared Keys<h:br/>
            <no-link>FIA_X509_EXT.1</no-link> X.509v3 Certificate Validation<h:br/>
          </dependencies>
          <f-element>
            <title>
              When the TSF negotiates a TLS_RSA_PSK cipher suite, the TSF shall verify that the presented identifier matches the reference identifier per RFC 6125 section 6.
            </title>
            <note role="application">
	      <h:p>
	      This requirement must be claimed if any ciphersuites beginning with 'TLS_RSA_PSK' are selected in FCS_RADSEC_EXT.2.1.</h:p>
	      <h:p>
              The rules for verification of identity are described in Section 6 of RFC 6125. 
              The reference identifier is typically established by configuration (e.g. configuring the name of the authentication server). 
              Based on a singular reference identifier’s source domain and application service type (e.g. HTTP, SIP, LDAP), 
              the client establishes all reference identifiers which are acceptable, such as a Common Name for the Subject Name field of the certificate and a (case-insensitive) DNS name for the Subject Alternative Name field. 
              The client then compares this list of all acceptable reference identifiers to the presented identifiers in the TLS server’s certificate.
	      </h:p>
	      <h:p>
              The preferred method for verification is the Subject Alternative Name using DNS names, URI names, or Service Names. 
              Verification using the Common Name is required for the purposes of backwards compatibility. 
              Additionally, support for use of IP addresses in the Subject Name or Subject Alternative name is discouraged as against best practices but may be implemented. 
              Finally, support for wildcards is discouraged but may be implemented. 
              If the client supports wildcards, the client must follow the best practices regarding matching; these best practices are captured in the evaluation activity.
	      </h:p>
            </note>
          </f-element>
          <f-element>
            <title>When the TSF negotiates a TLS_RSA_PSK cipher suite, the TSF shall  <selectables>
                <selectable>not establish the connection</selectable>
                <selectable>request authorization to establish the connection</selectable>
                <selectable><assignable>other action</assignable></selectable>
              </selectables> if the presented server certificate is deemed invalid.</title>
              <note role="application">
		<h:p>This requirement must be claimed if any ciphersuites beginning with 'TLS_RSA_PSK' are selected in FCS_RADSEC_EXT.2.1.</h:p>
		<h:p>
              Validity is determined by the identifier verification, certificate path, the expiration date, and the revocation status in accordance with RFC 5280. 
              Certificate validity is tested in accordance with testing performed for FIA_X509_EXT.1/Rev in the NDcPP.
		</h:p>
	      </note>
            <aactivity>
              <TSS>
                The evaluator will ensure that the TSS describes the client’s method of establishing all reference identifiers from the administrator and application-configured reference identifier, 
                including which types of reference identifiers are supported (e.g., Common Name, DNS Name, URI Name, Service Name, or other application-specific Subject Alternative Names) and whether IP addresses and wildcards are supported. 
                The evaluator will ensure that this description identifies whether and the manner in which certificate pinning is supported or used by the TOE.<h:br/><h:br/></TSS>
              <Guidance>
                The evaluator will verify that the operational guidance includes instructions for setting the reference identifier to be used for the purposes of certificate validation in TLS.<h:br/><h:br/>
	      </Guidance>
              <Tests>The evaluator will perform the following tests:
                <testlist>
                    <test>The evaluator will attempt to establish the connection using a server with a server certificate that contains the Server Authentication purpose in the extendedKeyUsage field and 
                      verify that a connection is established. The evaluator will then verify that the client rejects an otherwise valid server certificate that lacks the Server Authentication purpose in the extendedKeyUsage 
                      field and a connection is not established. Ideally, the two certificates should be identical except for the extendedKeyUsage field.</test>
                    <test>The evaluator will present a server certificate that does not contain an identifier in either the Subject Alternative Name (SAN) or Common Name (CN) that matches the reference identifier. 
                      The evaluator will verify that the connection fails.</test>
                    <test>The evaluator will present a server certificate that contains a CN that matches the reference identifier, 
                      contains the SAN extension, but does not contain an identifier in the SAN that matches the reference identifier. 
                      The evaluator will verify that the connection fails. The evaluator will repeat this test for each supported SAN type.</test>
                    <test>The evaluator will present a server certificate that contains a CN that does not match the reference identifier but does contain an identifier in the SAN that matches. 
                      The evaluator will verify that the connection succeeds.</test>
                      <test>
			[conditional] If the TOE does not mandate the presence of the SAN extension, the evaluator will present a server certificate that contains a CN that matches the reference identifier and does not contain the SAN extension. 
			The evaluator will verify that the connection succeeds.
			If the TOE does mandate the presence of the SAN extension, this test will be omitted.
		  </test>
                  <test>[conditional] If wildcards are supported by the TOE, the evaluator will perform the following tests: <h:ul>
                      <h:li>The evaluator will present a server certificate containing a wildcard that is not in the left-most label of the presented identifier (e.g. foo.*.example.com) and verify that the connection fails.</h:li>
                      <h:li>The evaluator will present a server certificate containing a wildcard in the left-most label but not preceding the public suffix (e.g. *.example.com). 
                        The evaluator will configure the reference identifier with a single left-most label (e.g. foo.example.com). 
                        The evaluator will verify that the connection succeeds. The evaluator will configure the reference identifier without a left-most label as in the certificate (e.g. example.com) and verify that the connection fails. 
                        The evaluator will configure the reference identifier with two left-most labels (e.g. bar.foo.example.com) and verify that the connection fails.</h:li>
                      <h:li>The evaluator will present a server certificate containing a wildcard in the left-most label immediately preceding the public suffix (e.g. *.com). 
                        The evaluator will configure the reference identifier with a single left-most label (e.g. foo.com) and verify that the connection fails. 
                        The evaluator will configure the reference identifier with two left-most labels (e.g. bar.foo.com) and verify that the connection fails.</h:li>
                    </h:ul>
                    </test>
                    <test>[conditional] If wildcards are not supported by the TOE, the evaluator will present a server certificate containing a wildcard and verify that the connection fails.</test>
                    <test>[conditional] If URI or Service name reference identifiers are supported, the evaluator will configure the DNS name and the service identifier. 
                      The evaluator will present a server certificate containing the correct DNS name and service identifier in the URIName or SRVName fields of the SAN and verify that the connection succeeds. 
                      The evaluator will repeat this test with the wrong service identifier (but correct DNS name) and verify that the connection fails.</test>
                </testlist>
              </Tests>
            </aactivity>
          </f-element>
        </f-component>
        
      </sec:sel_fcs> 
      
      <sec:sel_fia title="Identification and Authentication (FIA)">
        
        <ext-comp-def title="Pre-Shared Key Composition" fam-id="FIA_PSK_EXT">
          <fam-behavior>Components in this family describe requirements for the creation and composition of pre-shared keys used to establish trusted communications channels.</fam-behavior> 
        </ext-comp-def> 
        
        <!-- moved from mandatory by TD0277 -->
        <f-component name="Pre-Shared Key Composition" cc-id="fia_psk_ext.1">
		  <depends on="s-radsec-psk"/>
          <consistency-rationale>This SFR defines parameters for pre-shared key generation. The Base-PP supports pre-shared keys as a potential authentication method for IPsec. This PP-Module 
            does not prevent this from being used but does define restrictions on how pre-shared keys may be generated and what constitutes an acceptable key. 
            This may also be used for RadSec, which is outside the original scope of the Base-PP.</consistency-rationale>
          
          <comp-lev>requires the TSF to support pre-shared keys that meet various characteristics for specific communications usage.</comp-lev>
          <management>No specific management functions are identified.</management>
          <audit>There are no auditable events foreseen.</audit>
          <dependencies>FCS_RBG_EXT.1 Random Bit Generation</dependencies>
          
          <f-element id="fel-use-psk">
            <title>The TSF shall be able to use pre-shared keys for <selectables>
              <selectable>RADIUS over TLS (RadSec)</selectable>
              <selectable>IPsec</selectable>
	      <selectable>WPA3-SAE</selectable>
	      <selectable>WPA3-SAE-PK</selectable>
              <selectable>IEEE 802.11 WPA2-PSK</selectable>
              <selectable><assignable>other protocols that use pre-shared keys</assignable></selectable>
            </selectables>. 
            </title>
          </f-element>
          <f-element id="fel-valid-psk">
            <title>The TSF shall be able to accept text-based pre-shared keys that: <h:ul>
              <h:li>are 22 characters and <selectables>
                <selectable><assignable>other supported lengths</assignable></selectable>
                <selectable exclusive="yes">no other lengths</selectable>
              </selectables>;</h:li>
              <h:li>are composed of any combination of upper and lower case letters, numbers, and special
                characters (that include: “!”, “@”, “#”, “$”, “%”, “^”, “&amp;”, “*”, “(“, and “)”).
              </h:li>
            </h:ul>
            </title>
          </f-element>
          <f-element id="fel-get-psk">
            <title>The TSF shall be able to <selectables> 
              <selectable>accept</selectable>
              <selectable>generate using the random bit generator specified in FCS_RBG_EXT.1</selectable>
            </selectables> bit-based pre-shared keys.
            </title>
          
            <note role="application">
	      <h:p>
		This requirement must be included if IPsec or another protocol that uses pre-shared keys is claimed, and pre-shared key authentication is selected 
          (e.g., "Pre-shared Keys" is selected in FCS_IPSEC_EXT.1.13 or "pre-shared keys" is selected in FCS_RADSEC_EXT.1.2). 
          The intent of this requirement is that all protocols will support both text-based and bit-based pre-shared keys.
	      </h:p>
	      <h:p>
		For the length of the text-based pre-shared keys, a common length (22 characters) is required to help
		promote interoperability.
		If other lengths are supported, they should be listed in the assignment;
		this assignment can also specify a range of values (e.g., "lengths from 5 to 55 characters") as well.
	      </h:p>
	      <h:p>
		For <xref to="fel-get-psk"/>, the ST author specifies whether the TSF merely accepts bit-based pre-shared keys
		or is capable of generating them.
		If it generates them, the requirement specifies that they must be
		generated using the RBG provided by the TOE.
	      </h:p>
          </note>
          <aactivity>
	    <TSS>
	      The evaluator will verify that the TSS describes 
	      <h:ol>
		<h:li>the protocols that can use pre-shared keys and that these are consistent with the selections made in <xref to="fel-use-psk"/>.</h:li>
		<h:li>the allowable values for pre-shared keys and that they are consistent with the selections made in <xref to="fel-valid-psk"/>.</h:li>
		<h:li>the way bit-based pre-shared keys are procured and that it is consistent with the selections made in <xref to="fel-get-psk"/>.</h:li>
	      </h:ol>
	    </TSS>
              <Guidance>
		  The evaluator will examine the operational guidance to determine that it provides guidance to
                administrators on the composition of strong text-based pre-shared keys, and (if the selection indicates
                keys of various lengths can be entered) that it provides information on the range of lengths supported.
                The guidance must specify the allowable characters for pre-shared keys, and that list must be a superset of the list contained in FIA_PSK_EXT.1.2.<h:br/><h:br/>
                The evaluator will confirm the operational guidance contains instructions for either entering bit-based
                pre-shared keys for each protocol identified in the requirement or for generating a bit-based pre-shared
                key (or both).<h:br/><h:br/>
	      </Guidance>
              <Tests>The evaluator will also perform the following tests for each protocol (or instantiation of a protocol, if
                performed by a different implementation on the TOE). Note that one or more of these tests can be
                performed with a single test case.
                <testlist>
                  <test>The evaluator will compose a pre-shared key of 22 characters that contains a combination of
                    the allowed characters in accordance with the operational guidance and demonstrates that a successful
                    protocol negotiation can be performed with the key.
                  </test>
                  <test>[conditional]: If the TOE supports pre-shared keys of multiple lengths, the evaluator will repeat
                    Test 1 using the minimum length; the maximum length; a length inside the allowable range; and invalid
                    lengths beyond the supported range (both higher and lower). The minimum, maximum, and included
                    length tests should be successful, and the invalid lengths must be rejected by the TOE.
                  </test>
                  <test>[conditional]: If the TOE does not generate bit-based pre-shared keys, the evaluator will obtain a
                    bit-based pre-shared key of the appropriate length and enter it according to the instructions in the
                    operational guidance. The evaluator will then demonstrate that a successful protocol negotiation can
                    be performed with the key.</test>
                  <test>[conditional]: If the TOE does generate bit-based pre-shared keys, the evaluator will generate a
                    bit-based pre-shared key of the appropriate length and use it according to the instructions in the
                    operational guidance. The evaluator will then demonstrate that a successful protocol negotiation can
                    be performed with the key.
                  </test>
                </testlist>
              </Tests>
            </aactivity>
          </f-element>
        </f-component>
      </sec:sel_fia> 

    </sel-sfrs>
    <obj-sfrs>
    </obj-sfrs>
    <impl-dep-sfrs></impl-dep-sfrs>
  </sec:Security_Requirements>
  
  <appendix title="Implicitly Satisfied Requirements" id="satisfiedreqs">
    This PP-Module has no implicitly satisfied requirements. All SFR dependencies are explicitly met either through SFRs defined by the PP-Module or inherited from the Base-PP. 
  </appendix>
  
  <appendix title="Allocation of Requirements in Distributed TOEs" id="allocation">
    
    For a distributed TOE, the security functional requirements in this PP-Module need to be met by the
    TOE as a whole, but not all SFRs will necessarily be implemented by all components. The
    following categories are defined in order to specify when each SFR must be implemented by a
    component: <h:ul>
      <h:li><h:b>All Components ("All")</h:b> &#8212;All components that comprise the distributed TOE must
        independently satisfy the requirement.</h:li>
      <h:li><h:b>At least one Component ("One")</h:b> &#8212;This requirement must be fulfilled by at least one
        component within the distributed TOE.</h:li>
      <h:li><h:b>Feature Dependent ("Feature Dependent")</h:b> &#8212; These requirements will only be
        fulfilled where the feature is implemented by the distributed TOE component (note
        that the requirement to meet the PP-Module as a whole requires that at least one component
        implements these requirements if they are claimed by the TOE).</h:li></h:ul>
    The table below specifies how each of the SFRs in this PP-Module must be met, using the categories above.
    
    <h:table>
      <h:tr class="header">
        <h:td>Requirement</h:td>
        <h:td>Description</h:td>
        <h:td>Distributed TOE SFR Allocation</h:td>
      </h:tr>
      <!--  
      <h:tr>
        <h:td>FCS_COP.1/DataEncryption</h:td>
        <h:td>Cryptographic Operation (AES Data Encryption/Decryption)</h:td>
        <h:td>All</h:td>
      </h:tr>
     <h:tr>
     <h:td>FPT_TST_EXT.1</h:td>
       <h:td>TSF Testing</h:td>
       <h:td>All</h:td> 
     </h:tr>
      <h:tr>
        <h:td>FTP_ITC.1</h:td>
        <h:td>Inter-TSF Trusted Channel</h:td>
        <h:td>One</h:td>
        </h:tr>
     -->
      <h:tr>
        <h:td>FAU_GEN.1/WLAN</h:td>
        <h:td>Audit Data Generation</h:td>
        <h:td>All</h:td>
      </h:tr>
      <h:tr>
        <h:td>FCS_CKM.1/WPA</h:td>
        <h:td>Cryptographic Key Generation (Symmetric Keys for WPA2 Connections)</h:td>
        <h:td>One</h:td>
      </h:tr>
      <h:tr>
        <h:td>FCS_CKM.2/GTK</h:td>
        <h:td>Cryptographic Key Distribution (GTK)</h:td>
        <h:td>Feature Dependent</h:td>
      </h:tr>
      <h:tr>
        <h:td>FCS_CKM.2/PMK</h:td>
        <h:td>Cryptographic Key Distribution (PMK)</h:td>
        <h:td>Feature Dependent</h:td>
      </h:tr>
      <h:tr>
        <h:td>FIA_8021X_EXT.1</h:td>
        <h:td>802.1X Port Access Entity (Authenticator) Authentication</h:td>
        <h:td>One</h:td>
      </h:tr>
      <h:tr>
        <h:td>FIA_UAU.6</h:td>
        <h:td>Re-Authenticating</h:td>
        <h:td>Feature Dependent</h:td>
      </h:tr>
      <h:tr>
        <h:td>FMT_SMF.1/AccessSystem</h:td>
        <h:td>Specification of Management Functions</h:td>
        <h:td>Feature Dependent</h:td>
      </h:tr>
      <h:tr>
        <h:td>FMT_SMR_EXT.1</h:td>
        <h:td>No Administration from Client</h:td>
        <h:td>All</h:td>
      </h:tr>
      <h:tr>
        <h:td>FPT_FLS.1</h:td>
        <h:td>Failure with Preservation of Secure State</h:td>
        <h:td>All</h:td>
      </h:tr>
      <h:tr>
        <h:td>FTA_TSE.1</h:td>
        <h:td>TOE Session Establishment</h:td>
        <h:td>All</h:td>
      </h:tr>
      <h:tr>
        <h:td>FTP_ITC.1/Client</h:td>
        <h:td>Inter-TSF Trusted Channel (WLAN Client Communications)</h:td>
        <h:td>All</h:td>
      </h:tr>
      <h:tr>
        <h:td>FCS_CKM.2/DISTRIB</h:td>
        <h:td>Cryptographic Key Distribution (802.11 Keys)</h:td>
        <h:td>Feature Dependent</h:td>
      </h:tr>
      <h:tr>
        <h:td>FCS_RADSEC_EXT.1</h:td>
        <h:td>RadSec</h:td>
        <h:td>Feature Dependent</h:td>
      </h:tr>
      <h:tr>
        <h:td>FCS_RADSEC_EXT.2</h:td>
        <h:td>RadSec using Pre-Shared Keys</h:td>
        <h:td>Feature Dependent</h:td>
      </h:tr>
      <h:tr>
        <h:td>FCS_RADSEC_EXT.3</h:td>
        <h:td>RadSec using Pre-Shared Keys and RSA</h:td>
        <h:td>Feature Dependent</h:td>
      </h:tr>
      <h:tr>
        <h:td>FIA_PSK_EXT.1</h:td>
        <h:td>Pre-Shared Key Composition</h:td>
        <h:td>Feature Dependent</h:td>
      </h:tr>
    </h:table>
    
  </appendix>
  
  <appendix title="Entropy Documentation and Assessment" id="EAR">
    The TOE does not require any additional supplementary information to describe its entropy sources beyond the requirements outlined in the Base-PP.  
  </appendix>
  
  <bibliography>
    <cc-entry/>
    
    
    <entry id="bibNDcPP">
      <tag>NDcPP</tag>
      <description>
        <h:a href="https://www.niap-ccevs.org/MMO/PP/CPP_ND_V2.2E.pdf">collaborative Protection Profile for Network Devices</h:a>, Version 2.2e, March 23, 2020
      </description>
    </entry>
    
    <entry id="bibNDSD">
      <tag>NDcPP SD</tag>
      <description>
        <h:a href="https://www.niap-ccevs.org/MMO/PP/CPP_ND_V2.2-SD.pdf">Supporting Document - Evaluation Activities for Network Device cPP</h:a>, Version 2.2, December 2019
      </description>
    </entry>

  </bibliography>
</Module>
